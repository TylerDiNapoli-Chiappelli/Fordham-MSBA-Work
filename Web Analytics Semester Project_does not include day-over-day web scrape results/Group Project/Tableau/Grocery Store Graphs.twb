<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1018.2303                               -->
<workbook original-version='18.1' source-build='2020.3.2 (20203.20.1018.2303)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='All Stores Master File' inline='true' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All Stores Master File' name='textscan.1t9z61d1bmslv013gerr81mjuijm'>
            <connection class='textscan' directory='C:/Users/Home/Documents/Web Analytics/Group Project/Python Exports' filename='All Stores Master File.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1t9z61d1bmslv013gerr81mjuijm' name='All Stores Master File.csv' table='[All Stores Master File#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Store' ordinal='1' />
            <column datatype='string' name='Product Type' ordinal='2' />
            <column datatype='string' name='Product Name' ordinal='3' />
            <column datatype='real' name='Price' ordinal='4' />
            <column datatype='string' name='Quantity Sold In' ordinal='5' />
            <column datatype='string' name='Sale on This Product?' ordinal='6' />
            <column datatype='real' name='If Sale, Original Price' ordinal='7' />
            <column datatype='real' name='Quantity' ordinal='8' />
            <column datatype='string' name='Units' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1t9z61d1bmslv013gerr81mjuijm' name='All Stores Master File.csv' table='[All Stores Master File#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Store' ordinal='1' />
            <column datatype='string' name='Product Type' ordinal='2' />
            <column datatype='string' name='Product Name' ordinal='3' />
            <column datatype='real' name='Price' ordinal='4' />
            <column datatype='string' name='Quantity Sold In' ordinal='5' />
            <column datatype='string' name='Sale on This Product?' ordinal='6' />
            <column datatype='real' name='If Sale, Original Price' ordinal='7' />
            <column datatype='real' name='Quantity' ordinal='8' />
            <column datatype='string' name='Units' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Store</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Store]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Store</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity Sold In</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Quantity Sold In]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Quantity Sold In</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sale on This Product?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sale on This Product?]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Sale on This Product?</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>If Sale, Original Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[If Sale, Original Price]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>If Sale, Original Price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Units]</local-name>
            <parent-name>[All Stores Master File.csv]</parent-name>
            <remote-alias>Units</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales Savings Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_229683630051291137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='median(IF not isnull([If Sale, Original Price]) &#13;&#10;&#13;&#10;THEN ([If Sale, Original Price]/[Quantity]) - [Calculation_306526298674462720]&#13;&#10;END)' />
      </column>
      <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Price]/[Quantity]' />
      </column>
      <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
      </column>
      <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Sale on This Product?]' role='dimension' type='nominal' />
      <column datatype='string' name='[Store]' role='dimension' type='nominal' />
      <column datatype='string' name='[Units]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='All Stores Master File.csv' datatype='table' name='[__tableau_internal_object_id__].[All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7]' role='measure' type='quantitative' />
      <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
      <column-instance column='[Units]' derivation='None' name='[none:Units:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Product Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Meat&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresh Vegetables&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fresh Fruit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Units:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;LBS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Store:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Stop and Shop&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Whole Foods&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wegmans&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Walmart&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='All Stores Master File.csv' id='All Stores Master File.csv_69A15BECC5EA41A7BEE55C7EFC376EF7'>
            <properties context=''>
              <relation connection='textscan.1t9z61d1bmslv013gerr81mjuijm' name='All Stores Master File.csv' table='[All Stores Master File#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Store' ordinal='1' />
                  <column datatype='string' name='Product Type' ordinal='2' />
                  <column datatype='string' name='Product Name' ordinal='3' />
                  <column datatype='real' name='Price' ordinal='4' />
                  <column datatype='string' name='Quantity Sold In' ordinal='5' />
                  <column datatype='string' name='Sale on This Product?' ordinal='6' />
                  <column datatype='real' name='If Sale, Original Price' ordinal='7' />
                  <column datatype='real' name='Quantity' ordinal='8' />
                  <column datatype='string' name='Units' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Average Per-Unit Price by Department Over Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='46.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{B94FEC23-0BDC-478A-A96C-D2A53C64FEF9}' />
    </worksheet>
    <worksheet name='Beef Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;1lb Ground Beef Roll Frozen 73\%&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;80\% Lean/20\% Fat Ground Beef and Pork Blend Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Beef Hot Dogs Uncured Grass-fed Organic - 8 ct&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Organic Beef Rib Eye Steak Grass-fed Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Organic Beef Tenderloin Filet Grass-fed Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Ground Beef Grass-fed Fresh&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop Ground Beef 80\% Lean Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Ground Beef 85\% Lean Value Pack Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Meatloaf Mix (Pork, Veal &amp; Beef) Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop USDA Choice Beef Top Round Steak Fresh&quot;' />
              <groupfilter from='&quot;All Natural* 73\% Lean/27\% Fat Ground Beef Roll&quot;' function='range' level='[none:Product Name:nk]' to='&quot;All Natural* 85\% Lean/15\% Fat Angus Ground Beef Patties 4 Count&quot;' />
              <groupfilter from='&quot;All Natural* 85\% Lean/15\% Fat Ground Beef Round Tray&quot;' function='range' level='[none:Product Name:nk]' to='&quot;All Natural* 96\% Lean/4\% Fat Extra Lean Ground Beef Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Angus Beef Eye of Round Roast Boneless&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Angus Beef Top Round for London Broil Steak Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Applegate The Great Organic Beef Hot Dog Uncured - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bacon &amp; Cheddar Beef Chuck Patties 4 Count&quot;' />
              <groupfilter from='&quot;Beef Backribs Bone-In&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Beefsteak Slicing Tomatoes&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone In Beef Short Ribs&quot;' />
              <groupfilter from='&quot;Boneless Beef Chuck Roast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boneless Beef Short Ribs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Butcher&apos;s Shop Choice Beef Strip Roast Boneless Vacuum Sealed&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cooked Perfect Angus Beef Meatballs Dinner Size Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Country Fried Beef Steaks with Gravy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;D&apos;artagnan Wagyu Ground Beef All Natural Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Extra Value Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fork In The Road Foods Honest Dogs With Pasture-raised Beef&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value 100\% Pure Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Beef Burgers&quot;' />
              <groupfilter from='&quot;Grobbel&apos;s Corned Beef Brisket Flat&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ground Beef 90\% Lean/ 10\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hebrew National Beef Franks 97\% Fat Free Kosher - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hebrew National Beef Franks Kosher - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Italian Style Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Jack Daniel&apos;s® Old No. 7 Party Pack Thinly Sliced Beef Brisket 20 oz. Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lean Beef Chuck Stew Meat&quot;' />
              <groupfilter from='&quot;Marketside Butcher Grass-Fed 80\% Lean/20\% Fat Ground Beef&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Marketside Butcher Grass-Fed Beef Top Sirloin Steak&quot;' />
              <groupfilter from='&quot;Marketside Butcher Organic Grass-Fed 93\% Lean / 7\% Fat Ground Beef&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Marketside Butcher Wagyu Beef Ribeye Steak&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Mini Beef Meatballs for Kids&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Natural Uncured Pork &amp; Beef Pepperoni&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Old Neighborhood Beef Steak Shaved&quot;' />
              <groupfilter from='&quot;Organic Beef Burgers&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Beef Tenderloin Roast&quot;' />
              <groupfilter from='&quot;Organic Boneless Beef Chuck Roast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Boneless Beef Ribeye Steak&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grass Fed Ground Beef 85\% Lean 15\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grass Fed Ground Beef 93\% Lean 7\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Homestyle Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Italian Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Roast Beef&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmesan Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Beef Back Ribs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Philly Gourmet Pure Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Porterhouse Steak, Prime Dry Aged Beef (Avg. 1lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Prime Rib Beef Steak Patties&quot;' />
              <groupfilter from='&quot;Rumba Beef Cheek Meat (Cachete de Res)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Rumba Sliced Beef Liver (Higado de Res Rebanado)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sadler&apos;s Smokehouse Seasoned Beef Brisket&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice 100\% Angus Beef Burgers&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Angus Bacon &amp; Aged Cheddar Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Angus Vidalia Onion Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Black Angus Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Black Angus Seasoned Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Strip Steak, Prime Dry Aged Beef (Avg. 1lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Tender Year Brand Sliced Beef Liver&quot;' />
              <groupfilter from='&quot;USDA Choice Angus Beef Porterhouse Steak Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;USDA Choice Beef New York Strip Steak Boneless Fresh&quot;' />
              <groupfilter from='&quot;Wegmans Angus Beef Boneless Short Ribs (Avg. 1lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Angus Beef, Tenderloin Steak (Avg. 0.87lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Beef Eye Round Roast (Avg. 2.87lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Beef, Top Round Steak, USDA Choice (Avg. 1.57lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Boneless Beef Brisket, FAMILY PACK&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Boneless Beef Short Ribs (Avg. 1.8lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Choice Angus Beef Hanger Steak (Avg. 0.5lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Choice Angus Beef Hanger Steak (Avg. 0.62lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Flat Iron Steak, Angus Beef (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Beef, Chuck Roast, Grass Fed (Avg. 2.34lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Beef, Tenderloin Steak, Grass Fed (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Perfect Portion Boneless Beef Sirloin Steak (Avg. 0.77lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Perfect Portion Boneless Beef Sirloin Steak (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Uncured Corned Beef Brisket (Avg. 2.99lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Uncured Corned Beef Brisket (Avg. 3lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Whole Center Cut Beef Tenderloin, USDA Choice, FAMILY PACK (Avg. 3.75lb.)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{04BCE905-2EC5-47E5-91C0-4833C5FB04EA}' />
    </worksheet>
    <worksheet name='Beef Price Over Time (Median vs. Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;1lb Ground Beef Roll Frozen 73\%&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;80\% Lean/20\% Fat Ground Beef and Pork Blend Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Beef Hot Dogs Uncured Grass-fed Organic - 8 ct&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Organic Beef Rib Eye Steak Grass-fed Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Organic Beef Tenderloin Filet Grass-fed Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Ground Beef Grass-fed Fresh&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop Ground Beef 80\% Lean Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Ground Beef 85\% Lean Value Pack Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Meatloaf Mix (Pork, Veal &amp; Beef) Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop USDA Choice Beef Top Round Steak Fresh&quot;' />
              <groupfilter from='&quot;All Natural* 73\% Lean/27\% Fat Ground Beef Roll&quot;' function='range' level='[none:Product Name:nk]' to='&quot;All Natural* 85\% Lean/15\% Fat Angus Ground Beef Patties 4 Count&quot;' />
              <groupfilter from='&quot;All Natural* 85\% Lean/15\% Fat Ground Beef Round Tray&quot;' function='range' level='[none:Product Name:nk]' to='&quot;All Natural* 96\% Lean/4\% Fat Extra Lean Ground Beef Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Angus Beef Eye of Round Roast Boneless&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Angus Beef Top Round for London Broil Steak Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Applegate The Great Organic Beef Hot Dog Uncured - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bacon &amp; Cheddar Beef Chuck Patties 4 Count&quot;' />
              <groupfilter from='&quot;Beef Backribs Bone-In&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Beefsteak Slicing Tomatoes&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone In Beef Short Ribs&quot;' />
              <groupfilter from='&quot;Boneless Beef Chuck Roast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boneless Beef Short Ribs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Butcher&apos;s Shop Choice Beef Strip Roast Boneless Vacuum Sealed&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cooked Perfect Angus Beef Meatballs Dinner Size Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Country Fried Beef Steaks with Gravy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;D&apos;artagnan Wagyu Ground Beef All Natural Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Extra Value Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fork In The Road Foods Honest Dogs With Pasture-raised Beef&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value 100\% Pure Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Beef Burgers&quot;' />
              <groupfilter from='&quot;Grobbel&apos;s Corned Beef Brisket Flat&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ground Beef 90\% Lean/ 10\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hebrew National Beef Franks 97\% Fat Free Kosher - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hebrew National Beef Franks Kosher - 6 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Italian Style Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Jack Daniel&apos;s® Old No. 7 Party Pack Thinly Sliced Beef Brisket 20 oz. Tray&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lean Beef Chuck Stew Meat&quot;' />
              <groupfilter from='&quot;Marketside Butcher Grass-Fed 80\% Lean/20\% Fat Ground Beef&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Marketside Butcher Grass-Fed Beef Top Sirloin Steak&quot;' />
              <groupfilter from='&quot;Marketside Butcher Organic Grass-Fed 93\% Lean / 7\% Fat Ground Beef&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Marketside Butcher Wagyu Beef Ribeye Steak&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Mini Beef Meatballs for Kids&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Natural Uncured Pork &amp; Beef Pepperoni&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Old Neighborhood Beef Steak Shaved&quot;' />
              <groupfilter from='&quot;Organic Beef Burgers&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Beef Tenderloin Roast&quot;' />
              <groupfilter from='&quot;Organic Boneless Beef Chuck Roast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Boneless Beef Ribeye Steak&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grass Fed Ground Beef 85\% Lean 15\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grass Fed Ground Beef 93\% Lean 7\% Fat&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Homestyle Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Italian Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Roast Beef&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmesan Beef Meatballs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Beef Back Ribs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Philly Gourmet Pure Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Porterhouse Steak, Prime Dry Aged Beef (Avg. 1lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Prime Rib Beef Steak Patties&quot;' />
              <groupfilter from='&quot;Rumba Beef Cheek Meat (Cachete de Res)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Rumba Sliced Beef Liver (Higado de Res Rebanado)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sadler&apos;s Smokehouse Seasoned Beef Brisket&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice 100\% Angus Beef Burgers&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Angus Bacon &amp; Aged Cheddar Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Angus Vidalia Onion Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Black Angus Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sam&apos;s Choice Black Angus Seasoned Beef Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Strip Steak, Prime Dry Aged Beef (Avg. 1lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Tender Year Brand Sliced Beef Liver&quot;' />
              <groupfilter from='&quot;USDA Choice Angus Beef Porterhouse Steak Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;USDA Choice Beef New York Strip Steak Boneless Fresh&quot;' />
              <groupfilter from='&quot;Wegmans Angus Beef Boneless Short Ribs (Avg. 1lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Angus Beef, Tenderloin Steak (Avg. 0.87lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Beef Eye Round Roast (Avg. 2.87lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Beef, Top Round Steak, USDA Choice (Avg. 1.57lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Boneless Beef Brisket, FAMILY PACK&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Boneless Beef Short Ribs (Avg. 1.8lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Choice Angus Beef Hanger Steak (Avg. 0.5lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Choice Angus Beef Hanger Steak (Avg. 0.62lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Flat Iron Steak, Angus Beef (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Beef, Chuck Roast, Grass Fed (Avg. 2.34lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Beef, Tenderloin Steak, Grass Fed (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Perfect Portion Boneless Beef Sirloin Steak (Avg. 0.77lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Perfect Portion Boneless Beef Sirloin Steak (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Uncured Corned Beef Brisket (Avg. 2.99lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Uncured Corned Beef Brisket (Avg. 3lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Whole Center Cut Beef Tenderloin, USDA Choice, FAMILY PACK (Avg. 3.75lb.)&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{AFFD35E1-6F67-43E5-9637-7442CFD85D80}' />
    </worksheet>
    <worksheet name='Chicken Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;*John Soules Foods Rotisserie Style Chicken Breast Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Breaded Chicken Breast Nuggets Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Breaded Chicken Nuggets Gluten Free Frozen&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Free from Chicken Breast Fillets - 6 ct All Natural&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Free from Chicken Whole Antibiotic Free Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Meatballs Chicken Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Rotisserie Chicken Whole (Cold)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Rotisserie Chicken Whole Refrigerated&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Naturals Chicken Breasts Thin Sliced Antibiotic Free Frsh&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Organic Chicken Breast Tenders Antibiotic Free Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Organic Chicken Thighs Boneless Skinless Free Range Fresh&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop Chicken Breast Cutlets Boneless Skinless Thin Sliced - 4 ct&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Chicken Wings Uncooked Value Pack Fresh&quot;' />
              <groupfilter from='&quot;Air Chilled Chicken Drumstick&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Al Fresco Chicken Sausage Sweet Apple with Maple Syrup - 4 ct All Natural&quot;' />
              <groupfilter from='&quot;Applegate Family Size Gluten-Free Chicken Breast Tenders&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Applegate Naturals Chicken &amp; Maple Breakfast Sausage Patties - 6 ct Frozen&quot;' />
              <groupfilter from='&quot;Applegate Organics Breakfast Sausage Chicken &amp; Apple Gluten Free Organic&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Applegate Organics Chicken Nuggets Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;BBQ Dry Rubbed Boneless Chicken Breast&quot;' />
              <groupfilter from='&quot;Bell &amp; Evans Chicken Breast Nuggets, Breaded&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Bell &amp; Evans Organic Air Chilled Chicken Livers&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone In Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone-in Split Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Boneless &amp; Skinless Chicken Breasts&quot;' />
              <groupfilter from='&quot;Boneless Skinless Chicken Breast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter from='&quot;Breaded Boneless Skinless Chicken Breasts&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Breaded Chicken Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Breaded Parmesan Chicken Meatballs With Mozzarella&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cauliflower Breaded Spicy Chicken Tenders&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;CAULIPOWER Chicken Tenders&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;CAULIPOWER Spicy(ish) Chicken Tenders&quot;' />
              <groupfilter from='&quot;Chicken &amp; Vegetable Dino Nuggets&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Chicken, Breast, Cutlets, Perfect Portion, FAMILY PACK&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Classic Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Coconut Breaded Chicken Tenders&quot;' />
              <groupfilter from='&quot;Crescent Boneless Skinless Chicken Breasts&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Crescent Foods Halal Young Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cut Organic Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fast Fixin&apos; Restaurant Style. Homestyle Chicken Breasts with Gravy&quot;' />
              <groupfilter from='&quot;Freshness Guaranteed Boneless Chicken Breasts Family Pack&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Freshness Guaranteed Chicken Breast Tenderloins&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Freshness Guaranteed Fresh Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Freshness Guaranteed Thin-Sliced Chicken Breasts&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fully Cooked Grilled Chicken Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Gardein Teriyaki Plant-Based Chick&apos;n Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Garlic &amp; Herb Boneless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Garlic Parmesan Panko Crusted Chicken Breast Cutlet&quot;' />
              <groupfilter from='&quot;Gluten Free Breaded Chicken Breast Nuggets&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Gluten Free Chicken Tenders&quot;' />
              <groupfilter from='&quot;Great Value All Natural Chicken Thighs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value All Natural Diced Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Boneless Skinless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter from='&quot;Great Value Chicken Breast Tenderloins&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Chicken Wings with Garlic Butter Dry Rub&quot;' />
              <groupfilter from='&quot;Great Value Fully Cooked Breaded Boneless Buffalo Style Chicken Wyngz&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Fully Cooked Crispy Chicken Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Honey Barbecue Seasoned Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Grilled Chicken Breasts&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Halal Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hormel Roasted Chicken Breasts &amp; Gravy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;House of Raeford Chicken Breasts, Boneless Skinless&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;John Soules Foods Grilled Chicken Breast Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;John Soules Foods® Fully Cooked Grilled Chicken Breast Strips with Rib Meat 16 oz. Bag&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kidz Baked Chicken Nuggets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kidz Baked Chicken Nuggets (16-oz Bag)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kosher Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kosher Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Livers, Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Marketside Chicken Caesar Salad Bowl 6.25 oz&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Meyer Lemon Marinated Boneless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Natural Chicken Nuggets Family Size&quot;' />
              <groupfilter from='&quot;Natural Gluten-free Chicken Nuggets Family Size&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Natural Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Air Chilled Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Air Chilled Split Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Bone In Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Boneless And Skinless Chicken Breasts&quot;' />
              <groupfilter from='&quot;Organic Boneless Skinless Chicken Breast Fillet&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Breaded Chicken Breast Tenders&quot;' />
              <groupfilter from='&quot;Organic Chicken Breast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Fresh Young Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Gluten-free Chicken Nuggets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Roasted Chicken Breast &amp; Sea Salt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Smoked Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Whole Chicken Legs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pecan Smoked Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Perdue Boneless Chicken Wyngz Bourbon Style Frozen&quot;' />
              <groupfilter from='&quot;Perdue Breaded Chicken Breast Cutlets Homestyle - 4 ct&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Perdue Harvestland NAE Ground Chicken (1 lb.)&quot;' />
              <groupfilter from='&quot;Perdue Harvestland Organic Fresh Boneless Skinless Chicken Breast Tenderloins (0.8-1.35 lbs.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Perdue Simply Smart Organics Whole Grain Chicken Breast Strips (25 oz.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pilgrim&apos;s Pride: Breasts W/Rib Meat Italian Style Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Plain Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Spatchcock Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Spinach &amp; Feta Panko Crusted Chicken Breast Cutlets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Taylor Farms Apple &amp; Walnut Salad with Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Taylor Farms Caesar Salad with Chicken &amp; Bacon&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Teriyaki Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;TGI Friday&apos;s Crispy Buffalo Style Chicken Wings 25.5 oz Box&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;TGI Friday&apos;s Crispy Honey BBQ Chicken Wings 25.5 oz Box&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Thin Boneless Skinless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Tuna Infusions Smoked by Chicken of the Sea&quot;' />
              <groupfilter from='&quot;Tyson Any&apos;tizers Breaded Popcorn Chicken Frozen&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Tyson® Fully Cooked Crispy Chicken Strips&quot;' />
              <groupfilter from='&quot;Tyson® Fully Cooked Honey BBQ Chicken Strips&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Tyson® Grilled &amp; Ready® Fully Cooked Pulled Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Tyson® Uncooked Buffalo Style Chicken Wings&quot;' />
              <groupfilter from='&quot;Wegmans Antibiotic Free Bone-In Skin-On Chicken Thighs (Avg. 1.72lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Antibiotic Free Thin Sliced Boneless Skinless Chicken Breasts (Avg. 1.33lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Bone-In Chicken Thighs, FAMILY PACK (Avg. 4.48lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Boneless &amp; Skinless, Highly Trimmed Chicken Thigh Cutlets, FAMILY PACK (Avg. 4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Chicken Drumsticks, FAMILY PACK (Avg. 4.45lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Chicken Wings, FAMILY PACK (Avg. 4.75lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Bone-In Chicken Thighs (Avg. 1.61lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Boneless Skinless Chicken Thighs, FAMILY PACK (Avg. 2.6lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Chicken Breast Tenderloins (Avg. 1lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Chicken Drumsticks, FAMILY PACK (Avg. 3.4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Cut Chicken Wings (Avg. 1.62lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Cut Chicken Wings (Avg. 1.84lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Fresh Whole Chicken, Free Range (Avg. 3.3lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Fresh Whole Chicken, Free Range (Avg. 3.9lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Thin Sliced Chicken Breast Cutlets (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Whole Chicken Cut In Pieces (Avg. 3.38lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Whole Chicken Cut In Pieces (Avg. 3.4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Roasting Chicken (Avg. 6.27lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Roasting Chicken (Avg. 6.62lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Chicken Legs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{EEDD0104-64F4-402E-91B0-3607D307A4E8}' />
    </worksheet>
    <worksheet name='Chicken Price Over Time (Median vs. Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;*John Soules Foods Rotisserie Style Chicken Breast Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Breaded Chicken Breast Nuggets Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Breaded Chicken Nuggets Gluten Free Frozen&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Free from Chicken Breast Fillets - 6 ct All Natural&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Free from Chicken Whole Antibiotic Free Fresh&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Meatballs Chicken Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Rotisserie Chicken Whole (Cold)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Rotisserie Chicken Whole Refrigerated&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Naturals Chicken Breasts Thin Sliced Antibiotic Free Frsh&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Organic Chicken Breast Tenders Antibiotic Free Fresh&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Organic Chicken Thighs Boneless Skinless Free Range Fresh&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop Chicken Breast Cutlets Boneless Skinless Thin Sliced - 4 ct&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Chicken Wings Uncooked Value Pack Fresh&quot;' />
              <groupfilter from='&quot;Air Chilled Chicken Drumstick&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Al Fresco Chicken Sausage Sweet Apple with Maple Syrup - 4 ct All Natural&quot;' />
              <groupfilter from='&quot;Applegate Family Size Gluten-Free Chicken Breast Tenders&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Applegate Naturals Chicken &amp; Maple Breakfast Sausage Patties - 6 ct Frozen&quot;' />
              <groupfilter from='&quot;Applegate Organics Breakfast Sausage Chicken &amp; Apple Gluten Free Organic&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Applegate Organics Chicken Nuggets Frozen&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;BBQ Dry Rubbed Boneless Chicken Breast&quot;' />
              <groupfilter from='&quot;Bell &amp; Evans Chicken Breast Nuggets, Breaded&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Bell &amp; Evans Organic Air Chilled Chicken Livers&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone In Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bone-in Split Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Boneless &amp; Skinless Chicken Breasts&quot;' />
              <groupfilter from='&quot;Boneless Skinless Chicken Breast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter from='&quot;Breaded Boneless Skinless Chicken Breasts&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Breaded Chicken Patties&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Breaded Parmesan Chicken Meatballs With Mozzarella&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cauliflower Breaded Spicy Chicken Tenders&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;CAULIPOWER Chicken Tenders&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;CAULIPOWER Spicy(ish) Chicken Tenders&quot;' />
              <groupfilter from='&quot;Chicken &amp; Vegetable Dino Nuggets&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Chicken Gizzards&quot;' />
              <groupfilter from='&quot;Chicken Parmesan&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Chicken, Breast, Cutlets, Perfect Portion, FAMILY PACK&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Classic Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Coconut Breaded Chicken Tenders&quot;' />
              <groupfilter from='&quot;Crescent Boneless Skinless Chicken Breasts&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Crescent Foods Halal Young Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cut Organic Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fast Fixin&apos; Restaurant Style. Homestyle Chicken Breasts with Gravy&quot;' />
              <groupfilter from='&quot;Freshness Guaranteed Boneless Chicken Breasts Family Pack&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Freshness Guaranteed Chicken Breast Tenderloins&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Freshness Guaranteed Fresh Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Freshness Guaranteed Thin-Sliced Chicken Breasts&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fully Cooked Grilled Chicken Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Gardein Teriyaki Plant-Based Chick&apos;n Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Garlic &amp; Herb Boneless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Garlic Parmesan Panko Crusted Chicken Breast Cutlet&quot;' />
              <groupfilter from='&quot;Gluten Free Breaded Chicken Breast Nuggets&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Gluten Free Chicken Tenders&quot;' />
              <groupfilter from='&quot;Great Value All Natural Chicken Thighs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value All Natural Diced Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Boneless Skinless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter from='&quot;Great Value Chicken Breast Tenderloins&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Chicken Wings with Garlic Butter Dry Rub&quot;' />
              <groupfilter from='&quot;Great Value Fully Cooked Breaded Boneless Buffalo Style Chicken Wyngz&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Fully Cooked Crispy Chicken Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Honey Barbecue Seasoned Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Grilled Chicken Breasts&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Halal Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hormel Roasted Chicken Breasts &amp; Gravy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;House of Raeford Chicken Breasts, Boneless Skinless&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;John Soules Foods Grilled Chicken Breast Strips&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;John Soules Foods® Fully Cooked Grilled Chicken Breast Strips with Rib Meat 16 oz. Bag&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kidz Baked Chicken Nuggets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kidz Baked Chicken Nuggets (16-oz Bag)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kosher Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kosher Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Livers, Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Meyer Lemon Marinated Boneless Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Natural Chicken Nuggets Family Size&quot;' />
              <groupfilter from='&quot;Natural Gluten-free Chicken Nuggets Family Size&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Natural Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Air Chilled Chicken Drumsticks&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Air Chilled Split Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Bone In Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Boneless And Skinless Chicken Breasts&quot;' />
              <groupfilter from='&quot;Organic Boneless Skinless Chicken Breast Fillet&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Boneless Skinless Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Breaded Chicken Breast Tenders&quot;' />
              <groupfilter from='&quot;Organic Chicken Breast&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Chicken Thighs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Fresh Young Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Gluten-free Chicken Nuggets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Ground Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Roasted Chicken Breast &amp; Sea Salt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Smoked Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Whole Chicken Legs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Oven Roasted Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pecan Smoked Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Perdue Boneless Chicken Wyngz Bourbon Style Frozen&quot;' />
              <groupfilter from='&quot;Perdue Breaded Chicken Breast Cutlets Homestyle - 4 ct&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Perdue Harvestland NAE Ground Chicken (1 lb.)&quot;' />
              <groupfilter from='&quot;Perdue Harvestland Organic Fresh Boneless Skinless Chicken Breast Tenderloins (0.8-1.35 lbs.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Perdue Simply Smart Organics Whole Grain Chicken Breast Strips (25 oz.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pilgrim&apos;s Pride: Breasts W/Rib Meat Italian Style Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Plain Rotisserie Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Spatchcock Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Spinach &amp; Feta Panko Crusted Chicken Breast Cutlets&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Teriyaki Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;TGI Friday&apos;s Crispy Buffalo Style Chicken Wings 25.5 oz Box&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;TGI Friday&apos;s Crispy Honey BBQ Chicken Wings 25.5 oz Box&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Thin Boneless Skinless Chicken Breast&quot;' />
              <groupfilter from='&quot;Tyson Any&apos;tizers Breaded Popcorn Chicken Frozen&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Tyson® Fully Cooked Crispy Chicken Strips&quot;' />
              <groupfilter from='&quot;Tyson® Fully Cooked Honey BBQ Chicken Strips&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Tyson® Grilled &amp; Ready® Fully Cooked Pulled Chicken Breast&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Tyson® Uncooked Buffalo Style Chicken Wings&quot;' />
              <groupfilter from='&quot;Wegmans Antibiotic Free Bone-In Skin-On Chicken Thighs (Avg. 1.72lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Antibiotic Free Thin Sliced Boneless Skinless Chicken Breasts (Avg. 1.33lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Bone-In Chicken Thighs, FAMILY PACK (Avg. 4.48lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Boneless &amp; Skinless, Highly Trimmed Chicken Thigh Cutlets, FAMILY PACK (Avg. 4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Chicken Drumsticks, FAMILY PACK (Avg. 4.45lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Chicken Wings, FAMILY PACK (Avg. 4.75lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Bone-In Chicken Thighs (Avg. 1.61lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Boneless Skinless Chicken Thighs, FAMILY PACK (Avg. 2.6lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Chicken Breast Tenderloins (Avg. 1lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Chicken Drumsticks, FAMILY PACK (Avg. 3.4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Cut Chicken Wings (Avg. 1.62lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Cut Chicken Wings (Avg. 1.84lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Fresh Whole Chicken, Free Range (Avg. 3.3lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Fresh Whole Chicken, Free Range (Avg. 3.9lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Thin Sliced Chicken Breast Cutlets (Avg. 1lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Organic Whole Chicken Cut In Pieces (Avg. 3.38lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Organic Whole Chicken Cut In Pieces (Avg. 3.4lb.)&quot;' />
              <groupfilter from='&quot;Wegmans Roasting Chicken (Avg. 6.27lb.)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans Roasting Chicken (Avg. 6.62lb.)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Chicken&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Chicken Legs&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='8.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{EBDE71FF-4F7E-40CF-A6E5-A94D1FDF64AC}' />
    </worksheet>
    <worksheet name='Dairy Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{807A7809-50A4-4A2C-913C-52EDF7AD01A2}' />
    </worksheet>
    <worksheet name='Dairy Price Over Time (Median vs. Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='8.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='8.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{93438D7F-D19D-42EB-AFFD-65196F65FAC0}' />
    </worksheet>
    <worksheet name='Eggs Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;365 Everyday Value® Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Brown Eggs Large Omega-3&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Egg Whites Liquid Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Liquid Egg Whites Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Liquid Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Extra Large Cage Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Large Cage Free&quot;' />
              <groupfilter from='&quot;Bob Evans 100\% Liquid Egg Whites Fat Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boca The Original Spicy Chik&apos;n Veggie Patties Vegan Frozen - 4 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Born Free Eggs, Brown, Grade A, Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cage Free Extra Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cosmo&apos;s Eggs Pickled&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dole Salad Blend Very Veggie&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dr. Praeger&apos;s Black Bean Quinoa Veggie Burgers Gluten Free - 4 ct&quot;' />
              <groupfilter from='&quot;ECOS Fruit &amp; Veggie Wash&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Eggplant Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ener-G Egg Replacer Culinary Egg Substitute Powder Gluten &amp; Wheat Free&quot;' />
              <groupfilter from='&quot;Grated Parmigiano Reggiano&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Day Farms Hard Cooked Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value 100\% Liquid Egg Whites 32 oz&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Cage Free 100\% Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Egg Makers 32 oz&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Extra Large White Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Jumbo White Eggs&quot;' />
              <groupfilter from='&quot;Great Value Large Brown Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Large White Eggs Value Pack&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Egg Nog Pumpkin Limited Edition&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Golden Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Light Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Vanilla Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Horizon Organic Low Fat Egg Nog&quot;' />
              <groupfilter from='&quot;Just Egg&quot;' function='range' level='[none:Product Name:nk]' to='&quot;JUST Egg, Plant-Based Scramble&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;KREHER FAMILY EGG FARMS Eggs, White, Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lactaid Egg Nog 100\% Lactose Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O Lakes Brown Eggs Grade A Large All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O&apos;Lakes Farm Fresh Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Life Cuisine Tomato &amp; Spinach Egg White Egg Bites 4.5 oz.&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Life Cuisine Turkey Bacon &amp; Cheddar Egg Bites 4.5 oz.&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Marketside Large Cage Free Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Marketside Organic Cage Free Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;MorningStar Farms Veggie Breakfast Sausage Links&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Naked Kale Blazer Veggie 100\% Juice Blend No Sugar Added&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Free Range Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Large Free Range All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;New England Brown Eggs Grade A Extra Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;New England Brown Fertile Eggs Grade A Large&quot;' />
              <groupfilter from='&quot;Ore-Ida Just Crack an Egg All American Scramble Kit&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ore-Ida Just Crack an Egg Ultimate Scramble Kit Breakfast Bowls&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Cage Free Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Eggplant&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Omega-3 Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Omega 3 Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free-Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;ORGANIC VALLEY Egg Whites, Pasteurized, Liquid&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Extra-large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Large Brown Eggs (6 Ct)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmigiano Reggiano&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Medium Grade A Eggs&quot;' />
              <groupfilter from='&quot;Pete &amp; Gerry&apos;s Organic Free Range Large Brown Grade A Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Pete and Gerry&apos;s Extra Large Brown Eggs Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Purple Eggplant&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Soffer Farms Brown Eggs Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Extra Large Cage Free Omega-3 Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Grade A Brown Eggs&quot;' />
              <groupfilter from='&quot;Three Bridges Egg Bites, Bell Pepper &amp; Cheese&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Three Bridges Egg Bites, Uncured Bacon &amp; Cheese&quot;' />
              <groupfilter from='&quot;Vital Farms Organic Pasture-raised Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Vital Farms Pasture-raised Alfresco Eggs&quot;' />
              <groupfilter from='&quot;Wegmans 12 Extra Large Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans 18 Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Half Dozen Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Liquid Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Cage Free Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Eggs, Pasture Raised, Grade A, Jumbo, Brown, 6 Count&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Extra Large Brown Eggs, Cage Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Grade A Medium Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Large Brown Eggs, Cage Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Large Brown Eggs, Cage Free, FAMILY PACK&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Pasture Raised Grade A Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Pasture Raised Grade A Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Three Dozen Large Eggs, FAMILY PACK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{5DFE7CD9-9CCD-4791-91CE-953BD2DAA341}' />
    </worksheet>
    <worksheet name='Eggs Price Over Time (Median vs. Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;365 Everyday Value® Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Brown Eggs Large Omega-3&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Egg Whites Liquid Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Liquid Egg Whites Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Liquid Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Extra Large Cage Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Large Cage Free&quot;' />
              <groupfilter from='&quot;Bob Evans 100\% Liquid Egg Whites Fat Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Boca The Original Spicy Chik&apos;n Veggie Patties Vegan Frozen - 4 ct&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Born Free Eggs, Brown, Grade A, Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cage Free Extra Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cosmo&apos;s Eggs Pickled&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dole Salad Blend Very Veggie&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dr. Praeger&apos;s Black Bean Quinoa Veggie Burgers Gluten Free - 4 ct&quot;' />
              <groupfilter from='&quot;ECOS Fruit &amp; Veggie Wash&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Eggplant Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ener-G Egg Replacer Culinary Egg Substitute Powder Gluten &amp; Wheat Free&quot;' />
              <groupfilter from='&quot;Grated Parmigiano Reggiano&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Day Farms Hard Cooked Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value 100\% Liquid Egg Whites 32 oz&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Cage Free 100\% Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Egg Makers 32 oz&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Extra Large White Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Great Value Jumbo White Eggs&quot;' />
              <groupfilter from='&quot;Great Value Large Brown Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Great Value Large White Eggs Value Pack&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Egg Nog Pumpkin Limited Edition&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Golden Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Light Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hood Vanilla Egg Nog&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Horizon Organic Low Fat Egg Nog&quot;' />
              <groupfilter from='&quot;Just Egg&quot;' function='range' level='[none:Product Name:nk]' to='&quot;JUST Egg, Plant-Based Scramble&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;KREHER FAMILY EGG FARMS Eggs, White, Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lactaid Egg Nog 100\% Lactose Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O Lakes Brown Eggs Grade A Large All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O&apos;Lakes Farm Fresh Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Life Cuisine Tomato &amp; Spinach Egg White Egg Bites 4.5 oz.&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Life Cuisine Turkey Bacon &amp; Cheddar Egg Bites 4.5 oz.&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Marketside Large Cage Free Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Marketside Organic Cage Free Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;MorningStar Farms Veggie Breakfast Sausage Links&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Naked Kale Blazer Veggie 100\% Juice Blend No Sugar Added&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Free Range Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Large Free Range All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;New England Brown Eggs Grade A Extra Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;New England Brown Fertile Eggs Grade A Large&quot;' />
              <groupfilter from='&quot;Ore-Ida Just Crack an Egg All American Scramble Kit&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ore-Ida Just Crack an Egg Ultimate Scramble Kit Breakfast Bowls&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Cage Free Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Eggplant&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Omega-3 Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Omega 3 Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free-Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;ORGANIC VALLEY Egg Whites, Pasteurized, Liquid&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Extra-large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Large Brown Eggs (6 Ct)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmigiano Reggiano&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Medium Grade A Eggs&quot;' />
              <groupfilter from='&quot;Pete &amp; Gerry&apos;s Organic Free Range Large Brown Grade A Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Pete and Gerry&apos;s Extra Large Brown Eggs Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Purple Eggplant&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Soffer Farms Brown Eggs Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Extra Large Cage Free Omega-3 Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Grade A Brown Eggs&quot;' />
              <groupfilter from='&quot;Three Bridges Egg Bites, Bell Pepper &amp; Cheese&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Three Bridges Egg Bites, Uncured Bacon &amp; Cheese&quot;' />
              <groupfilter from='&quot;Vital Farms Organic Pasture-raised Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Vital Farms Pasture-raised Alfresco Eggs&quot;' />
              <groupfilter from='&quot;Wegmans 12 Extra Large Eggs&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Wegmans 18 Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Half Dozen Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Liquid Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Cage Free Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Eggs, Pasture Raised, Grade A, Jumbo, Brown, 6 Count&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Extra Large Brown Eggs, Cage Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Grade A Medium Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Large Brown Eggs, Cage Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Large Brown Eggs, Cage Free, FAMILY PACK&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Pasture Raised Grade A Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Organic Pasture Raised Grade A Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Wegmans Three Dozen Large Eggs, FAMILY PACK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='9.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='9.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{CFB3540B-0FD6-449D-93A7-EA7759D023FC}' />
    </worksheet>
    <worksheet name='Meat (Per Unit) Price Over Time - Median vs. Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='15.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{E23EC58A-F73A-4117-A1B3-DDA8711F50E4}' />
    </worksheet>
    <worksheet name='Meat Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Meat&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{F03F1059-5DC4-40F8-81E7-DE2F561359BB}' />
    </worksheet>
    <worksheet name='Milk Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;100\% Lactose Free Reduced Fat Milk (1/2 gl)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;365 Everyday Value® Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Brown Eggs Large Omega-3&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Kids Organic 1\% Low Fat Milk - 6 pk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Low Fat Kefir Probiotic Cultured Milk Smoothie Raspberry&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic 1\% Low Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Fat Free Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Low Fat Kefir Cultured Milk Smoothie Blueberry&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Whole Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 1\% Low Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Egg Whites Liquid Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Fat Free Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Ricotta Cheese Whole Milk&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Extra Large Cage Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Whole Vitamin D Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Almond Breeze Unsweetened Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Biazzo Old Fashioned Ricotta Cheese Whole Milk Gluten Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Biazzo Premium Mozzarella Cheese Whole Milk Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bob Evans 100\% Liquid Egg Whites Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bob Evans All Whites 100\% Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cacique Queso Fresco Part Skim Milk Cheese&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cage Free Extra Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee &amp; Oatmilk Black &amp; White&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee Cafe Latte with Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee XX Espresso with Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Keto Coffee with Almond Milk &amp; Coconut Cream Unsweetened&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cracker Barrel Vermont Cheddar Cheese Sharp White 2\% Milk Chunk&quot;' />
              <groupfilter from='&quot;Eggland&apos;s Best Brown Eggs Grade A Large Cage Free Vegetarian Fed Hens&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Eggland&apos;s Best White Eggs Grade A Large Vegetarian Fed Hens All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ener-G Egg Replacer Culinary Egg Substitute Powder Gluten &amp; Wheat Free&quot;' />
              <groupfilter from='&quot;fairlife 1\% Low-Fat Ultra-Filtered Milk Lactose Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;fairlife Whole Ultra-Filtered Milk Lactose Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Full Fat Oat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Galbani Mozzarella Cheese Whole Milk Low Moisture All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Goat Milk (1 Qt)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Grated Parmigiano Reggiano&quot;' />
              <groupfilter from='&quot;Guida&apos;s 1\% Low Fat Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Guida&apos;s Whole Vitamin D Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hershey&apos;s 2\% Reduced Fat Chocolate Milk - 18 pk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hershey&apos;s 2\% Reduced Fat Chocolate Milk Shelf Stable - 6 pk&quot;' />
              <groupfilter from='&quot;Hood 1\% Low Fat Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Horlicks Malted Milk Drink Just Add Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Just Egg&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;JUST Egg Plant-Based Scramble Egg Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kate&apos;s Real Buttermilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kite Hill Artisan Almond Milk Ricotta&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kraft Mozzarella Cheese Part Skim Low Moisture 2\% Milk Shredded Natural&quot;' />
              <groupfilter from='&quot;Lactaid 1\% Low Fat Milk 100\% Lactose Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Lactose Free 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O Lakes Brown Eggs Grade A Large All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Grade A Eggs&quot;' />
              <groupfilter from='&quot;Lifeway Kefir 1\% Cultured Lowfat Milk Blueberry&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Lifeway Kefir Cultured Milk Plain 1\% Low Fat Unsweetened&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lifeway Nonfat Milk &amp; Cream Kefir Cup Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Low Fat Oatmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Maple Hill Reduced Fat Milk 100\% Grassfed Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Maple Hill Whole Milk 100\% Grassfed Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Meyenberg Goat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Naked Kale Blazer Veggie 100\% Juice Blend No Sugar Added&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Large Free Range All Natural&quot;' />
              <groupfilter from='&quot;Nestle Nesquik Low Fat Chocolate Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;New England Brown Fertile Eggs Grade A Large&quot;' />
              <groupfilter from='&quot;Ore-Ida Just Crack an Egg All American Scramble Kit&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ore-Ida Just Crack an Egg Ultimate Scramble Kit&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Cage Free Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Coconut Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Dairy-free Unsweetened Plain Cashewmilk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Dairy-Free Vanilla Bean Cashewmilk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Omega-3 Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Milk 2\% DHA Plus&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Omega 3 Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Greek Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Unsweetened Original Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free-Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Cultured Lowfat Organic Buttermilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Extra-large Brown Eggs&quot;' />
              <groupfilter from='&quot;Organic Valley Organic Lactose Free Whole Milk (1/2 Gl)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Valley Organic Nonfat Lactose Free Milk (1/2 Gl)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Whole Milk (1 Gl)&quot;' />
              <groupfilter from='&quot;Organic Whole Milk Classic Cottage Cheese&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Whole Milk Greek Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Barista Oat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Oatmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Organic Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmalat 2\% Reduced Fat Milk Shelf Stable&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmigiano Reggiano&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Medium Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pete and Gerry&apos;s Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pete and Gerry&apos;s Extra Large Brown Eggs Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Plain Goat Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Promised Land Dairy 2\% Reduced Fat Midnight Chocolate Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sargento Off The Block Mozzarella Whole Milk Cheese Shredded&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Soffer Farms Brown Eggs Jumbo&quot;' />
              <groupfilter from='&quot;Stonyfield 1\% Low Fat Milk Organic&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Stonyfield Organic Organic Plain Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Extra Large Cage Free Omega-3 Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Grade A Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Toasted Coconut Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Traditional Plain Goat Milk Kefir&quot;' />
              <groupfilter from='&quot;Unsweetened Almond Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Unsweetened Coconutmilk Yogurt Alternative&quot;' />
              <groupfilter from='&quot;Unsweetened Oatmilk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Unsweetened Original Soymilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Unsweetened Vanilla Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Unsweetened Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vanilla Almond Milk Creamer&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vital Farms Organic Pasture-raised Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vital Farms Pasture-raised Alfresco Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Milk Ricotta Cheese&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Yogurt Coconut Milk Vanilla Unsweetened&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{A4334DBE-925A-4EBE-8FF8-3EB5B79B9CC4}' />
    </worksheet>
    <worksheet name='Milk Price Over Time (Median vs. Average)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;100\% Lactose Free Reduced Fat Milk (1/2 gl)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;365 Everyday Value® Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Free from Brown Eggs Large Omega-3&quot;' />
              <groupfilter from='&quot;Ahold Icon Nature&apos;s Promise Kids Organic 1\% Low Fat Milk - 6 pk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Nature&apos;s Promise Low Fat Kefir Probiotic Cultured Milk Smoothie Raspberry&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic 1\% Low Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Brown Eggs Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Fat Free Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Low Fat Kefir Cultured Milk Smoothie Blueberry&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Nature&apos;s Promise Organic Whole Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 1\% Low Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 100\% Egg Whites Liquid Cholesterol Free Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Jumbo&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Egg Substitutes 99\% Egg Product&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Fat Free Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ahold Icon Stop &amp; Shop Ricotta Cheese Whole Milk&quot;' />
              <groupfilter from='&quot;Ahold Icon Stop &amp; Shop White Eggs Grade A Extra Large Cage Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ahold Icon Stop &amp; Shop Whole Vitamin D Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Almond Breeze Unsweetened Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Biazzo Old Fashioned Ricotta Cheese Whole Milk Gluten Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Biazzo Premium Mozzarella Cheese Whole Milk Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bob Evans 100\% Liquid Egg Whites Fat Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Bob Evans All Whites 100\% Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cacique Queso Fresco Part Skim Milk Cheese&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cage Free Extra Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee &amp; Oatmilk Black &amp; White&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee Cafe Latte with Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Cold Brew Coffee XX Espresso with Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Califia Farms Keto Coffee with Almond Milk &amp; Coconut Cream Unsweetened&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cracker Barrel Vermont Cheddar Cheese Sharp White 2\% Milk Chunk&quot;' />
              <groupfilter from='&quot;Eggland&apos;s Best Brown Eggs Grade A Large Cage Free Vegetarian Fed Hens&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Eggland&apos;s Best White Eggs Grade A Large Vegetarian Fed Hens All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ener-G Egg Replacer Culinary Egg Substitute Powder Gluten &amp; Wheat Free&quot;' />
              <groupfilter from='&quot;fairlife 1\% Low-Fat Ultra-Filtered Milk Lactose Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;fairlife Whole Ultra-Filtered Milk Lactose Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Full Fat Oat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Galbani Mozzarella Cheese Whole Milk Low Moisture All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Goat Milk (1 Qt)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Grated Parmigiano Reggiano&quot;' />
              <groupfilter from='&quot;Guida&apos;s 1\% Low Fat Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Guida&apos;s Whole Vitamin D Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hershey&apos;s 2\% Reduced Fat Chocolate Milk - 18 pk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hershey&apos;s 2\% Reduced Fat Chocolate Milk Shelf Stable - 6 pk&quot;' />
              <groupfilter from='&quot;Hood 1\% Low Fat Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Horlicks Malted Milk Drink Just Add Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Just Egg&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;JUST Egg Plant-Based Scramble Egg Free&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kate&apos;s Real Buttermilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kite Hill Artisan Almond Milk Ricotta&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kraft Mozzarella Cheese Part Skim Low Moisture 2\% Milk Shredded Natural&quot;' />
              <groupfilter from='&quot;Lactaid 1\% Low Fat Milk 100\% Lactose Free&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Lactose Free 2\% Reduced Fat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Land O Lakes Brown Eggs Grade A Large All Natural&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Large Grade A Eggs&quot;' />
              <groupfilter from='&quot;Lifeway Kefir 1\% Cultured Lowfat Milk Blueberry&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Lifeway Kefir Cultured Milk Plain 1\% Low Fat Unsweetened&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lifeway Nonfat Milk &amp; Cream Kefir Cup Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Low Fat Oatmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Maple Hill Reduced Fat Milk 100\% Grassfed Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Maple Hill Whole Milk 100\% Grassfed Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Meyenberg Goat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Naked Kale Blazer Veggie 100\% Juice Blend No Sugar Added&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Extra Large Free Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nellie&apos;s Grade A Brown Eggs Large Free Range All Natural&quot;' />
              <groupfilter from='&quot;Nestle Nesquik Low Fat Chocolate Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;New England Brown Fertile Eggs Grade A Large&quot;' />
              <groupfilter from='&quot;Ore-Ida Just Crack an Egg All American Scramble Kit&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Ore-Ida Just Crack an Egg Ultimate Scramble Kit&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Cage Free Liquid Egg Whites&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Coconut Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Dairy-free Unsweetened Plain Cashewmilk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Dairy-Free Vanilla Bean Cashewmilk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Extra Large Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Jumbo Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Grade A Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Large Omega-3 Brown Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Milk 2\% DHA Plus&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Omega 3 Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Greek Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Plain Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Unsweetened Original Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Brown Eggs Grade A Large Free-Range&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Cultured Lowfat Organic Buttermilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Extra-large Brown Eggs&quot;' />
              <groupfilter from='&quot;Organic Valley Organic Lactose Free Whole Milk (1/2 Gl)&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Valley Organic Nonfat Lactose Free Milk (1/2 Gl)&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Organic Valley Organic Whole Milk (1 Gl)&quot;' />
              <groupfilter from='&quot;Organic Whole Milk Classic Cottage Cheese&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Organic Whole Milk Greek Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Barista Oat Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Oatmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Original Organic Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmalat 2\% Reduced Fat Milk Shelf Stable&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Parmigiano Reggiano&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Large Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pasture Raised Medium Grade A Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pete and Gerry&apos;s Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Pete and Gerry&apos;s Extra Large Brown Eggs Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Plain Goat Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Promised Land Dairy 2\% Reduced Fat Midnight Chocolate Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sargento Off The Block Mozzarella Whole Milk Cheese Shredded&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Soffer Farms Brown Eggs Jumbo&quot;' />
              <groupfilter from='&quot;Stonyfield 1\% Low Fat Milk Organic&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Stonyfield Organic Organic Plain Whole Milk Yogurt&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Extra Large Cage Free Omega-3 Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Country Hen Brown Eggs Grade A Large Free Range Organic&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Brown Eggs Grade A Large&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The Farmer&apos;s Cow Grade A Brown Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Toasted Coconut Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Traditional Plain Goat Milk Kefir&quot;' />
              <groupfilter from='&quot;Unsweetened Almond Milk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Unsweetened Coconutmilk Yogurt Alternative&quot;' />
              <groupfilter from='&quot;Unsweetened Oatmilk&quot;' function='range' level='[none:Product Name:nk]' to='&quot;Unsweetened Original Soymilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Unsweetened Vanilla Almond Milk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Unsweetened Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vanilla Almond Milk Creamer&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vanilla Almondmilk&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vital Farms Organic Pasture-raised Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Vital Farms Pasture-raised Alfresco Eggs&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Whole Milk Ricotta Cheese&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Yogurt Coconut Milk Vanilla Unsweetened&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Dairy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]' field-type='quantitative' max='5.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='5.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{FDAC6C5D-4125-47BA-AFC8-2DBADADEB6A8}' />
    </worksheet>
    <worksheet name='Savings From Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Sales Savings Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_229683630051291137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='median(IF not isnull([If Sale, Original Price]) &#13;&#10;&#13;&#10;THEN ([If Sale, Original Price]/[Quantity]) - [Calculation_306526298674462720]&#13;&#10;END)' />
            </column>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[If Sale, Original Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_229683630051291137]' derivation='User' name='[usr:Calculation_229683630051291137:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter from='&quot;Dairy&quot;' function='range' level='[none:Product Type:nk]' to='&quot;Seafood&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Stop and Shop&quot;' />
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Whole Foods&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_229683630051291137:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</column>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_229683630051291137:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='16' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_229683630051291137:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{5901F761-417A-4938-A813-451E635A0F02}' />
    </worksheet>
    <worksheet name='Seafood (Per Unit) Price Over Time - Median vs. Average'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Avg' name='[avg:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298674462720]' derivation='Median' name='[med:Calculation_306526298674462720:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Seafood&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]' field-type='quantitative' max='20.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * ([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[avg:Calculation_306526298674462720:qk] + [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[med:Calculation_306526298674462720:qk]))</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{39237A9C-F85F-4ECE-A8E1-0312AECD3CC1}' />
    </worksheet>
    <worksheet name='Seafood Price Over Time (Average Minus Median)'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column caption='Price Per Base Unit (Pound or EA)' datatype='real' name='[Calculation_306526298674462720]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Price]/[Quantity]' />
            </column>
            <column caption='Average Price Minus Median Price' datatype='real' name='[Calculation_306526298685505537]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_306526298674462720]) - MEDIAN([Calculation_306526298674462720])' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Price]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_306526298685505537]' derivation='User' name='[usr:Calculation_306526298685505537:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]'>
            <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Seafood&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] * [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[usr:Calculation_306526298685505537:qk])</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{BAE89086-8DEE-4D4B-B697-788261E70DFA}' />
    </worksheet>
    <worksheet name='Total Offered Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Sale on This Product?]' role='dimension' type='nominal' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Sale on This Product?]' derivation='Count' name='[cnt:Sale on This Product?:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Stop and Shop&quot;' />
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Whole Foods&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[cnt:Sale on This Product?:qk]</rows>
        <cols>([federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk] / [federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk])</cols>
      </table>
      <simple-id uuid='{D47255F6-60EF-42A3-9D32-ECABA58911A0}' />
    </worksheet>
    <worksheet name='When Are Sales Offered?'>
      <table>
        <view>
          <datasources>
            <datasource caption='All Stores Master File' name='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc' />
          </datasources>
          <datasource-dependencies datasource='federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Sale on This Product?]' role='dimension' type='nominal' />
            <column datatype='string' name='[Store]' role='dimension' type='nominal' />
            <column-instance column='[Sale on This Product?]' derivation='Count' name='[cnt:Sale on This Product?:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Store]' derivation='None' name='[none:Store:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Stop and Shop&quot;' />
              <groupfilter function='member' level='[none:Store:nk]' member='&quot;Whole Foods&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[cnt:Sale on This Product?:qk]</rows>
        <cols>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[tdy:Date:qk]</cols>
      </table>
      <simple-id uuid='{2DF87284-0FE4-4B2C-B023-5246684C9E7F}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Meat (Per Unit) Price Over Time - Median vs. Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE763F81-7990-4FD9-B3E4-67B2A66E1CC7}' />
    </window>
    <window class='worksheet' name='Meat Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05D82FD6-5574-4BA7-8401-63B3D33AC4D9}' />
    </window>
    <window class='worksheet' name='Chicken Price Over Time (Median vs. Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14669FEB-16C5-46C7-8278-30A09F9285C9}' />
    </window>
    <window class='worksheet' name='Chicken Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E99A3501-69D5-4946-B86A-B43954181165}' />
    </window>
    <window class='worksheet' name='Beef Price Over Time (Median vs. Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB80AC9F-7C65-4306-B450-6ECF6B517AED}' />
    </window>
    <window class='worksheet' name='Beef Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13EEE748-DA67-4BE9-8163-EB8A9E85F442}' />
    </window>
    <window class='worksheet' name='Seafood (Per Unit) Price Over Time - Median vs. Average'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90F84F30-E61B-416C-8E9A-2E94F401873B}' />
    </window>
    <window class='worksheet' name='Seafood Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF1F7295-46BA-45F4-B505-07C27F4E3C2B}' />
    </window>
    <window class='worksheet' name='Dairy Price Over Time (Median vs. Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF4E0F54-7AA7-4AE5-AD19-A56B9BED58EE}' />
    </window>
    <window class='worksheet' name='Dairy Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59C9D4F1-DE0E-4EBB-A4B7-4907D6F5C83E}' />
    </window>
    <window class='worksheet' name='Eggs Price Over Time (Median vs. Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C58574E-FA30-40D1-A5B7-570E4DC38250}' />
    </window>
    <window class='worksheet' name='Eggs Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB7BC6AD-A22C-4342-B63F-D594CED7213A}' />
    </window>
    <window class='worksheet' name='Milk Price Over Time (Median vs. Average)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C558A9C2-6F5A-4E4A-AB7C-518E610E0FE3}' />
    </window>
    <window class='worksheet' name='Milk Price Over Time (Average Minus Median)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Name:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Units:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6486FB4F-9687-40B0-B449-C0171BDB5AAE}' />
    </window>
    <window class='worksheet' name='Total Offered Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Sale on This Product?:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CA2388A-2BB0-4CA8-9BBB-377B9A4B2735}' />
    </window>
    <window class='worksheet' name='When Are Sales Offered?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Sale on This Product?:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2A698E70-5B57-4826-8A98-9F66546EF141}' />
    </window>
    <window class='worksheet' name='Savings From Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Sale on This Product?:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E44658D4-97D1-46C7-B128-BFA7F53D10D2}' />
    </window>
    <window class='worksheet' name='Average Per-Unit Price by Department Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Product Type:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[none:Store:nk]</field>
            <field>[federated.1vavv5o1eqgpyc1cy0rvt0ysl9kc].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D06E31CD-9EE2-4864-BD3E-BFA70DFA60B6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Per-Unit Price by Department Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Beef Price Over Time (Average Minus Median)' width='192'>
      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
      AAxSmv8PxS7xPrqPPDgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Beef Price Over Time (Median vs. Average)' width='192'>
      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
      0XHfKA0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Chicken Price Over Time (Average Minus Median)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXAc133nP6977hnMDM4BQJwELxAEL91HREuW5chWbMey5TheX/HG5Y3L
      W67aOJvNJlvrVFzJVjYbe9fJZhPL8ZU4vqJEVpSkZEfUSYriKYIgifseDObAzACYs7vf/gES
      4gHeAHrA6U8Vq6SZ7n4/9Lxv93u/936/n5BSSiwsyhTFbAMsLMzEEoBFWWMJwKKssQRgUdZY
      ArAoaywBWJQ1lgAsyhpLABZlje38f+RyObLZrJm2XDdSSjKZDF6v12xTLNY5Yj2uBBuGQTqd
      JhgMmm2KxTrHGgJZlDWWACzKGksAFmWNJQCLsqY0BSANRvp6eeONQ2Q0yM1GeO3gQcKxlNmW
      Wdxm2K59iAkIhWAwQDiRxaZA3tCxCQXDkOi6jmEY6LpOsVg021KLdU5pCsDQiSVmETJPYjaJ
      S9hxOmwkkyk21AURQqCqKna73WxLLdY5pbkOICUSiZQCIc5/JBFCIISw1gEsVozSfAMIgeDt
      zr/4kbjy8RYWN0lpToItLNYISwAWZY0lAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYA
      LMoaSwAWZY0lAIuyxhKARVljCcCirLEEYFHWlKYApGR04DTHT/ZSNKCYm+PYkcNEUxmzLbO4
      zSjNeAAg4A8QT8+gS0jGZtjYuZPIxCjVFR3ouo6u62iaZraZFuucEhWAxObxE3DNkCnoKAgy
      C2l07EvhkOf/WVjcCiUqAEE6HsHw1OIyFlBDzYwPD9O+cRNCCM5HcVpRYha3SmnGBF8DKybY
      YqUozUmwhcUaYQnAYgmZS1M4+h1kMWe2KWuGJQCLJbSJQ+Rf/hPyB76ONAyzzVkTSnQSbGEG
      RvQsjjs+gTZ5jOKx72Lf+4nbwtGgx/opnvg+RmL4su8sAVgsoU+fwt79JO7dHyP7959F+Oqw
      b33cbLNuGiOToHjse2gDL2Dv+iD27R+47BhLABYAyGIWmRpHretEqajH9Z4/JvvsF1Aq6lEb
      95ht3g0hdY1iz48pvPk0tvZ9uD/8LRRP9bLHWgKwAEAuREG1IzxVAKi1W3E9+t/J/vNv4/ng
      X6JUtppr4HUgpUQb2k/hta+hBFtwf/D/oVS2X3UYZwnAAlgcJwtfHcLmWvpMbbkP532/Qfa5
      L+J+8mmUc+IoNaSUGNHT5A/+X2QmgfOh38TW9uB1nVtWAjBSkwhv9UU/ssUiRvTMZUMdIQS2
      zvdhpKfIPf8l3O//OsLuXlO7pDRAL4JRRBbzUJjDWIgiMwnkwgwyP4eRGEGP9OC449PYu34Z
      oV5/ty4rARSOfAu1YSf2zl8y25SSQkqJHjmFo/vDl30nhMBx92fJz0fI/ezLuN79BwhlbbqN
      LGTIvfgVjOhZ0PJILYtw+BDeGoSnGuGtRbiC2DoexvXI7yJc/htuo6wEoIa60CePWAK4FC2L
      TE2gVG9a9muhqDj3/Weyz3+J/Gtfw/nAFxHK6m5ElFJSOPLXUMzifu+fIFwBcPhu6Ol+PZSV
      AJT6nRROfB+pFxGqVVzjPDKTAKEgfHVXPEbY3bge/TLZZ79A4fA3Uas3IfPpRe9RLoUsLEB+
      DlmYR+bmEN5qnA99CcV9c/u1jOgZtL5/wf3Bv0KpqL/ZP+2alNVKsBJoRGaTix4PiyX0WB+i
      oh5hc171OMVbjfvxP8KInqV45jn0qeMYybHF73wh1PpubJvfjeOuTyMcXvIvfgVp6Ddsjyxm
      yb/0P3Dc87lV7fxQZm8AYXOh1m1HDx9H8TeabU7JYER6URt2X9exSrAF93v/5zWPU+t3kf3H
      z1M89r0bWlGWUlLs+QnCWYFt87uv65xboWTfAOlEhMGRSSRgFHOc7u0hkpi75euqjbvQJ4/e
      uoG3CVJK9JnTqHWdK3pdYXfh+sU/pHDi7zDCJ677PGN2hMKx7+F86EsrPt5fjhJ9A0g0acNe
      iJIubEBJJvDXbaAm6OXC8IWbCWVQm+6ieOZ5pKGBsCLK0HIYyTGUytabup9XQ3hrcb3z98g+
      /yU8v/pDxLXmA0aR/P4/wnHHpxCB5hW3ZzlKVACgFzLYKjcQcEDO6yF6dpDZRDWdHc1LZVJv
      KiY42I7MzqItJMEVWHnD1xlyLgrSQPfWw2rEWDfehW3nR8g8/1s43/dncJWhkNbzE5A6Ytv7
      1yzeuzQFIA0i0xGKagq3XSCkhhSCyspKVFW9xTKpdrS6TkT8zHWvFt7OFGcHUCpbsTtWb3HQ
      duenMSaPYBx9Gsc9n1t2PmCkJskf/is8H/ominPtFttKUwBCZceeOy/6aE9lzYpdXt1wB/rk
      EUsAgDHdgxrasaptCEXF9e6vkPnhx1EbdmFrvf+i76U0yO3/Qxx7P4lS2baqtlxKyU6CV5NF
      ARxdkzFmKSOlRI/1odavrgAAFE8Vrkd/n/yLf4iRHL/oO+30c5BLY9/zsVW34zK71rzFEkCp
      7sBIDEGxzBNtGUWMxDBKcG12eqob9mLf+RS5n38ZWcwumjA/Q/6Nv8D5yO+s2RaLCylLAQi7
      G6VmC/rUcbNNMRW5EAdDQwSb16Q9IQT23R9FeKrJv/5/kIZO/pU/wd75BErN1jWx4VJME0B8
      so/XDh5lYCRsSvvqhr3o4fIWgB49jVKzBSHWrhsIxYbzHb+NPn6I/L99BSM5hmPvp0wLvTRN
      AJGxEY4dPsTwuDnbEtTGPejjh0xpu1QwpntQa7esebuKuxLXu76MNnYA10NfQjg8a27DeUzz
      AtW3b+f9LdsRytruLz+P2rgbIzGMLOYQ9vKLD1icAPfj2PmUKe0rddvxfvJZMGHcf5EdZjUc
      GRngTN8ZBkYjprQv7B6UqjaMWJ8p7ZuPxIieXXO343mEEAjVbnrWCVMEkM8kyRg2pifCVFZV
      mGECAGrjXvQb2KdyOyHnI2BoKGs0AS5VTHn/OD1B2to76L73ARyKeU8AtfluCsf/Fsfej5tm
      g1noM2fWxP9f6pg2BEpM9fHDHz3D6aEps0xAbdiNEelF6gXTbDALI9JzxQiwcsIUAcwMn+Lo
      YITOnXfQudHEffl2F6KifjHmtMzQZ06jNl5fDMDtjCkCGO8fpbKhhsP7X2RwfMYMEwAQQkFt
      3I0+dcw0G8xASgMj2odSs/Yu0FLDlDlA9y/sI72QZW/nTlwe8ybBsOgO1U4/B3s/Yaoda4lM
      T4E0Vj3ccD1gyhvA4fZiN7L09PQQjibNMGEJtWEX+swZpFY+KcGN+ABqQ7fZZpQEpk2CJ4eG
      ad+xh6b6SrNMAEC4qxCuAEZqwlQ71hI9cgqlqsNsM0oC0wTg8dr57p9/jZfeXG4CKhnpP83B
      A68zV4BUbJKDB16nb3R6xe0Qqh011IkRPrni1y5V9OmTqA27zDajJDBtHXo2nmTz9h347MvF
      5QrqQiF0mw+PHWK5PF177yUyPoSu60shkcVicWWMabyL4vhB2PrEylyvlJE6RnwQo3rLyt2/
      dYwpApCGzsadd2IbHcEbCi1zgE7PyZPYK6pJpyqwO930HnuD2qbNKxASeTlq851kD38DmypM
      2ZO+lhjJMAgFe0Xtbf+3Xg+m3IFCbo7h/iEmolHaK5ZZBxAqdz+w74IPgtxT27Bq9ghPFah2
      ZGoCYdLemLVCjw+i1m6zMmKcw5Q5QCoW5VTPKVANpmdmzTDhIoTNiVK7FX369p8HGJFTKLVb
      Td+EViqYIoC6ls08cPcODB2cTocZJlyG2rgbfeKw2WasOnqkZ8WTYK1nTPMC+asrCQRD1Feb
      uxB2HrV+F/rUcaR++04MpV7EmB1FCXWZbUrJYJoAwiPD9Lx13LSIsEtRAhsAY3Gb8G2KnAuD
      ot5UHv3bFVMEMDs9ThoPTY0h2lpLYzleOLwowVb0mV6zTVk19NgAamU7qFfPAl1OmCKA7FyS
      cCSGYnficZfOj6G23Is+eftujDNmelHqu6wJ8AWYIoBATYjaqiBel43Z5K1nfF4p1A13YER6
      FutS3YbokR6U6s1mm1FSmLIOMDMxSiw1h10RJfU0UoKtyPwcMpNAeFcuFeOVkIYO8pICEpf4
      51eqFJHU8sjUBKo1Ab4IUwTQ3n0XDR0LzM+l4CZL6KwGwuFBqdlMfv8fYdvybtSG3YsF2W5S
      pFJK0HKLZYOySWR6CiM5hjE3jUxPYMxHwbgkC/KlHV4oi+sUwRaEvwnF34gS2IDwhRAOLzi8
      F+X1kdIAQz9XVC632H4ujZEYBKEu1tqyWEJIkxJkHt//Aidmpmms7eJdD++9oXMNwyCdThMM
      rrx4jOwsWt+/oo8dQI8NoFSEUFsfwNZyH0p1x7JlhKQ0ID+HsRDDSI5ixPox4gMY6SkoZEAa
      YHeh+OoRwWYU/wYUfyPC34hQL14HkUbxwguDoZ2r4j6xKJ70JHJu+lxdL7FY3NoXQjj9yOws
      MhNffKtIudiuNBAuP8JdhW3zY9g7y2C/0w1gmgBmxvo4NRSmvmXzDYdFrqYALkTmUujxAbTB
      FxeryhQWUOq7sLXvA9WBEevDSAwvPl21PJx7UiuV7Sg1W1CCzQh3EOH0g92zosM9qReQuTlk
      bhY5P4MsLCBcAYS7crGWr829mO/I5lr1io7rGdMEkJ1Pk4hP0jeh8fADNxacsVYCuBBp6Mj0
      FNr4G+iTR6CYQanqQKle/Lc4JPFZ1SfXGaYJIDLaz6mBMVq27GRTc+0NnWuGACxuT0xbCc6k
      kywUCtaedAtTucwLlE1EOTQwxn1bN/Czo6M8vu8uDBaVYkjILSTQlAB+n51bGdGmE1Hy2pWv
      IKWBRKAIgZQSwzAQQkExMZHWekU3DKbSKUaSCdw2B16HA7/TSYXLhdfuWExTeO5Yce5+Lw4L
      JFJCTisyXygwl88zl88hpaTBH6DO60MRpeXKvlEuGwJlEwn6p8ZRbC50zcBFjhxevPY8icQc
      Do+dggxyx+7N3OzUStfypFILaLqG2+unwntpclpJePgsKeFnW1sjC7FJDvUOsXX7Thqq/Ugp
      SafTBAKWS285JJDXNAbjMaKZecaSs7hUG36Xm4VCHv2SUe+FXUARAl0aSMmynVs99/+6lGiG
      jiIUmvwB3HY7PqeLlmAQp2pDWSeiuOwNoDqdtLZsIJoo4HOpFBdmyWUMHE4XTneRDc3thMOx
      W2p08PgbvHpqlEp/BR1dd7Bzy6X5KQUNTS3kZxZXiVW3l1B1kEQ8QX1VBYZhLIVFWryNISWT
      6RSHJ8cYmk3QHKhkb2MT9ze3LXXcqyEBQxqoN1AvIK/rzCzMM55KcjIS5plTc3jtdjb4A7RX
      VtESrKTC4URVSrMWiymT4EJ2joGBIUZGR2jasncZAUhG+3qZSuXZ0tGGXYHhkVFCzZuor66w
      JsEXYEhJKpfl9EyEk5EwmUKBu5tb6QrVE3Stfep5zdCZnptjZDbBaHKWyXQKl81GQ4WfjVXV
      tAYrCbjc2NXScM2aIoDBY6/y01dPUFdbx533PcSW1mXigq9CuQvAkJJkNktfbIaeSJjZbJbm
      YCV3NTXTGqzCVkJPW03XiWczTKSSDCZiTKXTSCmp8/kWbVWvbqvH7qCrrn7V3iCmCCA7lyKW
      TAPgC1RR6ffe0PnlKAApJYlshrPRGU7NTJM81+l31jfQVlmFx14akXXXQjcMkrksE6kkk+kU
      mnH1jYenZyI8uWMXm6pXZ2+WKXuB3BUBvPNRzo7NUWfYb1gAtwtz+RzTc3Oc97lcidjCAicj
      YVK5HG2VlfxC20Zag5W410mnvxBVUaj2eKn2eNnVsOGaxwddbnoi4dtLAADh4SGOnRhh8457
      6VijoJiDYyNUOJ10hVYvw8T1oBsGx8OT/HywnxqP95quXb/Txb72DtqCVThttnXtdrxRttbW
      8YO3jqEZxqoM7UwTQMPG7bxnwxZsjrULz2sOBvnuscP4HE5aK6vWrN0LiS7M89PTPWiGwcd2
      30Fjhb+sOvSNUuf1ATAzP0ejf+Xd3qbNlqaH++kfGqB/DcukbvAH+Uj3Hv7mxBGm59Jr1i6A
      Zhi8NDzAN948yLbaEJ+58142+ANW578GQgi219Vzambl02KCSQLQilmqW7dSXx2ie/vaVCk/
      T3tVNU9s6+J7x4+QzGZXvT0pJaPJBF8/8ArjySSfu+d+7m9tL1m/eCmyrbaO3sg0xipE6pk0
      BBJExkbJOVzkcgVY4wXdnfWNzOVzfOvoIT57932r5kGZL+R5eXiQnsg0j2/ZRne9idVw1jH1
      FX5ymkZsIUOdz7ei1zblMWSzu3DZ8vT1DzO3YE5e/gdaN7IjVM/3jh0mu8Ib8qSU9Mei/OWh
      AxR1g8/f+6DV+W8Bm6KwrbaOM9GVT1ljigCiI70cG4rStetOU2uEPdKxmWqPl2dOvYVmrMy2
      Ciklp2ameab3JL+0rYv3dXbhdaw/d2Wp0V3fwJnoDCu9bGWKAMb6RqhpquPIy/sZmby1fUW3
      giIU3te5A11Kfnr61C2PMaWU9M5M8/zZ03x4xy4219Rak9wVojVYRTyzwHwhv6LXNWUlOJeZ
      I5leAMBTEcDvvbE9Kyu9EpwtFvmb44dpr6zm4Y7NN7WT8Xzn/6ezvXy4ezftldUrYpvF2/y4
      5wQtgSB3N6+c48SUN4DLU4FdTzMwPElkxtwaYQBuu52P7NzDyUiYQ+NjN3y+lJL+eJSfnunl
      qe49VudfJbbV1tETWVl3qGm+uMjYCMcOH2JkojRyg1Y4XXxiz10cGBvmhYGzZArXXzx7eDbO
      P/T28Cs799Bm0gJbObC5upaJ1GIk4UphmgBqm1qpDPpA5ijqpoQlX0aVx8Nn7ryXhUKBP31t
      P//Sd5qFQv6KEy8pJUOJGD86ecLq/GuA02ajraqKgfjKPTRNE8DU8CSPPP5OJnp6GI9fnh7R
      MHR0fXFSKqWkUChgrMF0xe9y8YHt3XzhvodQhOCrr73MT8+cIrawcJEQFjt/nB/3nOCju/bS
      EjS32mW5sCO06A1aCXTDME8AW3Z3c+TVQ9z9rkdorLx0N6hkZmyA/vFFv28qNslbb73FwMjq
      LIcvh9/l4rHN2/jiA/vwOhx84/ABfnDyGOG5NIaUDCbiPNN7ko9077E6/xrSWRtieDZOTrv1
      tZvpubR5m+EGTx5lbDKCN7RA1+ZLo4ME9RuayZ0LicznC2zt3ktkfHB1qkReBYcQPNTSzp0N
      Tbw5Oc53jr5JyOcjnsnwy51dNPoqrMwWa4gNqPP4GIxG2VJzY+l0LuXo5Lh5AgjWtbC9EwKB
      5Za2JaODAwxGF6hw23G4vJw+foi65i2rUiXyegjY7Ty6eSv3t7XTMx2m0R+gKVA+ATmlxOba
      Os7Eo3Q13Pwiqm4Y9CVi5glgIRlBc1RSX7vcRiBB67adtG57+5O7a24sbHK18NgdK+qHtrhx
      tteFeH10mKKu33Rs8UQ6iU0o5s0BGto2EXSqaFZmB4sbpNLlxu9yMZlO3fQ1Tk6H2dPYZJ4A
      Rvt6GJ2aYfDsjS88WZQ3iqLQWRu66c1xxrn9Wt31DeYJoG3bDmx6jo7ODrNMsFjHbK8LcSY6
      g36NoPrlGJlNEHC6qHR7zBPAfGoOp8fNfHreLBMs1jFVHi+KEMzM33iJrbemp5YC8k0TgG7o
      5LMZcsWVW9a2KB9sikJHVTU9NxgqWdA0Tk6H2RFaTMRgigCmBnp4460+xgZG8QVLo1C2xfqj
      K9TA6ZnIDe0Q6ItHaajw43MsVvoxRQCeiiDVQT9utwtNs7xAFjdHoz+AISWz2cx1n3MiPEV3
      fcNSnIYp6wDBUBPvCDWx7+FHKBS0a59gYbEMDlWlvbKKvtgM97W0X/P4TLHAWHKW93W+XSnT
      1NQEQig4nVa4oMXNsyPUwKnI9Q2DBuIxWisrl4Y/YLIALCxulfqKCuKZBd4KT5HOXT3Bwonw
      FDvrGy8KUzVtK4SFxUrgdTh5csdODoyN8K/9Zwi43GyvC7Gpuob6Cv9SeOt8Ic/0XJqOql0X
      nW8JwGLds6m6lo6qGnKaxlQ6xZlohB+cPIZuSDqqqtlWGyKeWaA5WInLdnGXN61K5K1QjunR
      La4fKeVS4ZCeyDRDiThjyVk+unsvm6sv3kJtCcCirLEmwRZlTWkKQEqGzvZw5FgPmoRCOs7B
      Q4cIx25++6uFxXKU5iRYahj2CtrriiQzBvZsBsMAu92+5iGRFrc3pSkAoZCfTzKVljQFC6gu
      HxsaaghPhanp7DAlJNLi9qREBaCyefMmsprAYxcIpw9vUadhg5V3x2JlKU0BAA63lws3SdTU
      rE6RNIvypjQnwRYWa4QlAIuyxhKARVljCcCirLEEYFHWWAKwKGssAViUNZYALMoaSwAWZY0l
      AIuyxTCkJQCL8iU5n7MEYFG+HDo9aQnAojwxcjmOvv5W6e4GtSg9pJTEUhmOnA2zobaCtvog
      XpcDRRHXPrmEkIZB+Lt/y1DaW6oCkMTCY8Qzgi0dLRjFLGdO99O0aRsBj5VJzgyy+SLPvd7H
      C0eG2L2pnv3HR0gv5An6XHS117K9tZa2hiABn2spF0+pMv+zn3H0zTN0PPRLJSoAqRNLFwk4
      NJI5SSEWpr61nfDEOBWb2pFSous6hRWsGG6xPIaUHD4b4Uf7T9FU4+N3fvV+GmsWM3rPZwsM
      h2c5Mxbnx/t7iKez+H1uutrq2NJUhcN+9fpdHqed1pAfm7p2gimePk3yp8/R2/1OdrTXlqgA
      ziGlRAACWMzdIhBCXLFyu8XK0jce5wf/dgopFH7tPXvY1lzFhQ93n9tB98YQ3RsXCxjmijrT
      iQy9I1EO9k6SK1498XEincVlV/j8B+6kyu9ezT8FAG1mhsRff4uKT/8aPc8P8altjSUqAKFS
      63cQz7oIaGmcNQ0M9Q/QvGkrQoilmGCHwxoOrQaxVIZ/fPUMx/qnef+DW3nH7jbstmtXY3Q4
      wO91s6W5+rraKWo6z752li9/+1U+9fgu7tnedKumXxEjk2H2G98k8NhjTFU30VQbI1TttxJj
      WbxNvqix/9go//DKGfZubeCj79yBz73yDxkjl6M4PkFxagpbqI4hm5+/eP4EOzeG+PhjO3E6
      Vva5LDWNxNPfBCGo+syv8a1/fYsqv4f3P7jVEsB6Rp+bJ3/mNPne02iJBLbaWmyhELZQCHtD
      PWp1NUK5tqdbSknP8AzffP44lT4Xn37Pbppq/RdlUb4VtHicwsAA+b5+8gMDaOFpbPX12Bsb
      0KYjFMNhtMpqvrcQIN21my988B6a6/wr0raRzzP7rW9jZLNU/4fPgd3Bb/zpP/FfPvYgrfVB
      SwDrBSklMpslf7aPXG8v+d5e9NlZHB0duLq6UGtq0ONxiuEw+kyU4vQ0ejKJrboatbZ2URA1
      NYgLXJYSiNm8/M2EzlRPH/+u3Un3xhAr0e9lvkB+aIhC/wDCbsexsR1HezvOrVtwtLWB3f72
      fE7TyA8Okh8Y5OXJDH8/LXm8OMUjDQ5c3d14770HcRPDXSObXXryV3/21xF2OwMTCf70Rwf5
      +hcfXxxOWwJYG6SUSBb3nxi6Tn54hMzxExSjMYTdhnA6EXY7QlFQnM7FDqIoCIcDI50mf/Ik
      2vg4rk0duDs7ce/cgaOlBWG78nBBahpaLIY2HUGbiaDF4nCurGiuoPHDE9Mcr97IB7vruCcT
      xi5XrlyVcDpxtLfhaG1dFN4NqGo6Ps9Xf3QA38gAv+JN4cvNU/Xrv469teW6r2NkMsS+/mco
      Xu9S5wd45uXTpDN5PvmLuxfttASw8kgpGZhM8HrPBAu5AplckflsgXy+SD5XoFAoUljIoNns
      6IoNee43FYCiL9MJpcSuFXD4vLh8Hmyqgtthw+mw4XXZcTntVFW4aKypoKOxCq/LjttlX9Yf
      r+kGL50Y5Sf7e9nZEeJD79hOTcCzujfkJsgXNH744ikO9IzTFhujfj5Gx5NP0Nq1iaDPhcth
      w6YuP7wzMhliX/3f2GprqPzUJ5c6v5SS3/qLn/Hv37uHrS2LaXYsAdxM+9kcWjwGgLDZEMo5
      D4migIBTMxn+7JlDvKPOjqv/NI5EjAq/B39XJ/7u7fg3tuFyO3E5bBd5V6SUFPXLCz8buiRb
      KFLQDApFjVxBJ1/QyBU1Mrki2XyRmWSGcHyOsUgK3ZAEvU5qgl46GivZUFNBcyhAJDHPT146
      jU1VeOqRLra1lH6upclomoHJBKORFGP944yMTmMLBvFV+glVemmuC9BU62fXphAVHudS57c3
      NhL82EeXOj/AVGyOr3z3Fb76hXcv3XdLADdBrucUye//HRgGUtOQ55/aQjCYV/l+1Q6eyg/T
      6ZE4Oztx792LvWkDisu16rYZUjKXyRNLZpiKzzEynWIymmYyNofDrvKBB7dxf1cT6hWenqWM
      1DRSz/8z0RdexHj8CZKtmxmPzjEwmWBkOsljd7Sz55VnqdzSQeBDTyLUi123z73ex9hMit/4
      wF1Ln1kCWEH6RqN87Sdv8Jkn7mB3axXC4VgxT8qtohsGhiGvy59fykgpyZ85y+x3votz8yaC
      Tz2F8HoYPj3M959+llFPLR94/C4evqMdt9N+0Xm/9/SLvP+BrdzVuWHp8/X3GChRRqaT/PEP
      D/LxX9zN3i0NKE5nyXR+AFVR1n3nBxBC4OrcRui//g4giHzlK2SPHMX97b/k8/e38Luffy9n
      J+L85p+/wM+PDJE/txqdnM8TS2XY3mZViFlxpuPz/LdvvsjH3tXNvt1tZptTNkjDIPvmYVI/
      /gnefQ9R8d73LLlWR6aT/Gh/L5PROX75F7YhBLx5Zor/9JH7LnowWQK4ReKpDL/39Is89XAX
      +3a3ltRTv1yQmgaqetm9N6RkOJzkBz/v4fjANP/xQ/fwYHfLRcdYArgFYqkMv//tl3jf/Vt5
      5x3tVucvUaSUzMwuUBP0oF6yMl6am+FWif6JOOH4PBtqKmisqcCmKthU5aY6bjyV4Q++8zKP
      3rHR6vwljhCCUJVv2e/KSgC5vMaRs2Gefe0ssVSGgNdF0OekoaaC1lCQ+iovjQtMrSQAAAP0
      SURBVNUVuF1XrzyzkC3wv35wkHu7mnji/i1W51/HlO0QqKjpxFIZ4qks49H0oq88mmYmmaG4
      3GrsBQgEj97ZzpMPbV934YAWF1OyAshn58kWBUG/F6kXicbieCoq8XmcqzoHkFKiLbMaeyFC
      iCsuw1usL0pzCCR1BgaGkIaOvWs3cjZKNJ2lxbf6k14hxG3hL7e4PkpOAEZ+nt7hKVzeAFXO
      Itm8xOtykk9NEba58bSErDKpFitGyQlAcfrYsXUzw32nGEkLNvvnyBd0hCJwOOyo5/y9VplU
      i5WgZOcAV6NU1gEs1j/WTM6irLEEYFHWLA2Bcrkc2WzWbHuui/OJsWwXhAMahoFyjQDwtTzm
      /MjyaotkpXYMlN59XO1j1uUcYDmklNf8cdfyGONc7O3VfphSFICmaRc9WK50rVK617di820j
      gFLjejtcqXE9Ha7UuBWbLQFYlDXWJHgFkIbBKy+/zHxqmqlY5vIDinMcPHCIE70Da2/cFXjr
      0Ksk5nMMjIwu+314fJj+oXHS8WmOHH6T0XB8jS28nOhoP6eGJxkYGlz2+4VkjKMnejG0eQ4d
      eIMTvf3XvGbJLYStV2oDTkYmo9iUOcYGkwQCFbh8lQgtR2tzDVLXMIzSedn6a+qZHh0EVeHY
      mwfRVC+VAS9uh0pNQwsNze2MjozgC9ai6MPYbOYvOurSjiikmNMVhs6eJJbKEgwGCQb8GHYf
      9VU1VCfnARVpXN/9tt4AK4Q7GKKQilDUNIRiw1Cc5GaGsFVUYeQW0G0u8vll3g5modioqVCJ
      pfPoUiJ1HZ8LZtIaDptgYqSfgcFBpiNxFIeDufl5sy0GoLWtmfGRCTRNRxUCfyBA38AIlQEv
      c4kZBgYGCIfDaIqTfD53zetZc4AV4PwtlFKCEBi6jqKqcG5yJgRomo5QlMsikszivM2GlCAN
      QEFRQMpFz5WuaRhSoqrqksvZ7Mnxks2GgSIEumGgqupitUdVQRo6um6gKOri33Qd99sSgEVZ
      UxqPIwsLk7AEYFHWWAKwWJcspBJMTE6jXcPTo2t5ovFZDC3PxPgYc5n8Rd9bcwCLdclL//AM
      rpYQyXk3uzuqEe4gDlViVxRcPh+ZZIx0QSF86iWm7Zt4qF3lhZMzaPNJHn9sH7HZDK7cpLUO
      YLE+UW0uOnft5N/+cT8Hw6cYnVPY1BBAtTt49NGHeenVA7hkgbwCTdsbgBlCTW1kxk9y5tRx
      Xn/pFe7Z905rCGSxPvH4bLz8wsts27kd4fLT1lTPrtYqcu46FKFQ5XORtwXY2NZKQ20Qm9PD
      ZN8xlIp60HW2bN1CbVO7NQSyuH042/MWzVu78FyjPvGFWAKwKGv+P4z0qB03ZmYGAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Chicken Price Over Time (Median vs. Average)' width='192'>
      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
      AcYHr4zyi2iQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dairy Price Over Time (Average Minus Median)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dairy Price Over Time (Median vs. Average)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Eggs Price Over Time (Average Minus Median)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYt0lEQVR4nO3deWwcWWLf8e+r6pt98r4vibpHs5o95J1jZ2d3Nrtex95dD+wgRpDEiAP/
      ExsJkNhIECR/BEEWSIDYCYwksBE4dmwnm3hmk8GusdHM7FzSjKTRSUkkpSZFimeT7JN9d1W9
      /EFJI61GImfU6mqy3gcgQHV1P71u1q/rvXqv6gkppURRHEqzuwKKYicVAMXRVAAUR1MBUBxN
      BUBxNBUAxdFUABRHUwFQHM1155dyuUypVLKzLtsmpaRYLNLS0mJ3VZQdTuzEkWDLssjlckSj
      UburouxwqgmkOJoKgOJoKgCKo6kAKI6mAqA4WtMGYDZ+jctXJqlZUCttcOGjs6xminZXS9ll
      XFs/xQ6S9bV1or17cWmQSK4yeuhpEgtztIf3YJompmlSq9XsrqiywzVnAKRk78GjJBdnSBW7
      0IWgkM9gCTdCCHRdR9d1XK7mrL6yczTnHiQEZiWPCPcSkAX0zgHmZ+cYGRlFCMGdsTshhM0V
      bT5SSnbcyKaN1EjwDialpGqapEtF5jJpbqaTZEolFYBPoTmPAMonklJSNmoki0VuppPcyqRJ
      5PNoQjAQibK3tZ2uUBh1XNw+RwVgam2VmXTS7mp8JqZlsZTLkauUCbjdDEZjHOvtpycUJuLz
      o6nm4GfiqAAEPR5CHq/d1fhMhBAc6OiksyVE2Oezuzq7huoDKI7WtANhitIIKgCKo6kAKI6m
      AqA4mgqA4mgqAIqjqQAojta0AaiVsrx98gwA5cwqp06fZnk9a3OtlN2mOUeCpcXC4iqxWAiA
      aq2GhgAEpmliWZa6HkCpi6YMgLQsCvkstxbX6Ovuxu3yEg76SSaT9LSH714T4Ha77a6qssM1
      9VQI0zTZnOMlqFareDxeNE2oqRBK3TTlEeAOXdfv/u5TE8CUJ6BpO8GK0ggqAIqjqQAojqYC
      oDiaCoDiaCoAiqOpACiOpgKgOJoKgOJoKgCKozVvAKSkUqne/nVzVUjTatppS8oO1bQBKGRW
      +empswBk1xa4fv068bllm2ul7DZNORlOWiZT8TlCfp2qYVKp1thz8Cgr89PqegClrpoyACDo
      H+hjbjFBMZ/DGwgycfEM3UP70XVdXQ+g1E1TXw/wMOp6AKVemrYPoCiNoAKgOJoKgOJoKgCK
      o6kAKI6mAqA4mgqA4mgqAIqjqQAojmZ7AGqFFCfeOMlUPK4WeFYazvYAbKwlGL90gUtXp1UA
      lIazfS5QOZdiOV0ABMND/bdXOZeszN8kZ3gYG+lH1kpcvTZJe98oPe0RNRdIqRvbZ4OWc2uM
      X7sFlsbQnQBICMU6yc7coFDrx0qlae0boastzL153YHz+JQmY3MAqiyvFyknV4gNH75vS620
      QQUdpIUnGCA9PUc6GeHQ2OB91wQoyuOwOQAehkaG6Bk7RLTFe8/jkmQqiRQujNIGpmVimBZd
      ba1o2ma3RdM0XC7bD2DKDmd7H2Bj9Sb/60fvs//IMZ794pHbfYBHU30ApV5sPQtU2VjnxLtn
      6Rvdv+2dX1HqydYAZNeWsbQgC9cucu7qDXUaVGk4W5tAplElk8khAZfbRyQSVE0gpaFsPQLo
      Lg/hFg9TE1eIzy7aWRXFoWw/jbKxsoCvY4T9A512V0VxINunQngjId557b/z5z98U/UBlIaz
      /wiwliTUtYfhnojdVVEcyOYASKJ9I3zteTeZqledBlUaztYmkJQ1bt2c5fr1mxQLRdUEUhrO
      1iNApbDB1NWrFL1BComEnVVRHMrWI4Av2MZLX38OjxB4vd6tX6AodWb/WaBAmIA/zNho78d9
      ACm5FZ/k0pVJDAuMcp6L58+xnivZWVVlF2qCs0ArXL1yhVylzL6xvXdDEI5ESOYS1CTk1hMM
      7z9CYnGe1uDo3enQhmHYWndl57O3D1DMML2c4cC+fmL9Q/ecBZK4/CEivlXKVQuBoFIuYPHx
      rdE1TUPXdRtrr+wGtgbArJZZWloGt5tgMHDPFkFmbZmarxWPuUGgs5+5mRlG9owhhLh7JZgQ
      6sSp8nhsDYAnEKa3t5NCuUYmlQIGNzcIQf/I2H3P3XfgQOMrqOx6tnaCSxtJbi2ski8UAE2N
      AygNZ/sVYWa1TKFYIFuy6O/pUNOhlYay/TTo+ux1/uLVH3H69Hl1BFAazvbToJGeXvYOpQi3
      be/bX1HqyfYjgMsb5PCh/aQSK+oIoDSc7QGolTeYmpigrWdAHQGUhrM9AEapSDZfoFKp2l0V
      xYEe6AOUUmucm5rCH4jxuacOgpRY1TxlEaTFIwDBnfGnegxE1Uo50oUKbY9dkqJ8eg+cBi2l
      UuR0nXxiCdOySCZSDI+2UxBhVpfStMe86Jqgu2+YFt/j9qFNMqkcNaOG7vERi4bVaVCloR5o
      AuleFwvx6+CLEm7x4wv4cfljRIJBDh8+QH9HmFyFOuz8kEvM8Zf/+1Xeee99Ll2bUZ1gpeE+
      9UBYLp3CG4rgdT3+RDTLrDE7HWdubg4Z6OSl5565ewSolosUqxaRcBAsg3Q6i68lRMDnUUcA
      pW4+dSc4HGuty84PUEgv8eMf/4RbK0l8fv89WyTra2vMT0+yUYVicpX51XWqNXU3aKW+bB0I
      80e6+O4rryABt6/lni2CloCPWkc/QTeUvV6MwhJrqQyhgOfurdFrtZpdVVd2CVsD4HL76GoL
      8u7pCQYGu+jqaN3cIE2m49MIf5hw0IcwTTRt8zoAXf/4mgC3221n9ZVdwPapEBurK1y+cJH0
      xh727tmz2QcQOs8cf/a+5x1rU3eOU+rP9gAE2rr4pe9+G6G51Eiw0nC2B6CUWeXK1AKYMDzc
      r0KgNJTNATAxva3sG6jR0tatdn6l4Ww/AhRTq6xniwi/uuWJ0ng2T4bTibYGuD41RTKVs7cq
      iiPZGoBqPsmb755jYO9BtUaYYgtbA5BZXUK6wyxOXOLihJoLpDSezWuEVUiup7EAt9dPayyi
      ZoMqDWXzGmFeYiEPl8fjrK2v2VkVxaFsvyJsY32V8UsXuHxtWjWBlIazPQAtbR0M98dwa5Jc
      SU1uUxrL9gBklxcZ/fxXCesZzp2N335UklpdZOLGLJYEaVaZvHaNQkXdDVqpL9sHwjpG93H1
      jTeI9B1hZHj47uO6N0hQLJKvQXl1gdbuXubn5tk/NoyUEikllmXZV3FlV7A9AKlbM1y4Msew
      4eWZp4/cfbycz+BtGyDsgRISj8eLwLy786sAKPVgewA8LWGOHz9CwWq5b4WYVDJFObmBW/QT
      inURvzFJ/56DaNpmq03TNFwu26vfEFZ+lcrJ/4CVvLHlc7XoEO6nXkHv+zxCc8bn8zhs/4Qs
      s0wiXebokb0fPyg0Dh49dt/zjn7uGE4jpcRcOEvlp/8G19g38Hz+72z5Gmttisr7v4fQXLi/
      8Ou4hp5DuNT6aw9jewBaYl30daSxpOrg3ktaJrUrr1K78Kd4v/KP0YefR4itz1no7WO4xr6B
      eetDqpf+gurJ38d9+Hu4D38P4VOLkf8s2wOQWZrj4pWbjA7n2Ts6pOYDAbJapPLO97FSs/h+
      8ffRW0c+1euFy4tr9EX04Rew1iaonvtjqpd/gPvQd3Af+DZaZOAJ1XznsX99gEqeN994i/bR
      pzh2cMTxUyGszDylv/pd9M6DeJ//Rwhv8LHLlNJCbiSojf+A2rXXN/sHoe461PYJM8vwhHdP
      248AlXIBNDelfN7uqthKSok5+x7lE/8Sz/HfxH30V7fV5NkOITREuAfPs7+N+5m/jXnzPWRl
      B0w/173whNeBsz0A0rKoViqIUhkJjmwCSbNG9fyfYFz7v/i/8wfoXYeeyP8jhED4Y2iHfumJ
      lL8T2RqAYjbBiTdPkVxaZKh/v+N2fmnWsJJxKqf+I1gm/lf+EC2o7n7RSPbeF8jjp6urnWIm
      hWU6465v0rKQ2XlqUz/GmHkbLBP3U7+C+8gvI3R1n6NGs70TfEelUsHj9e7KTrCUFjK/inHz
      XYwbJ5CFNfTBL+Ma+wZ691Nqx7eR7X2AO7zenTNYIy0DmV8Da+uxCzNxldrk61ipWVx9z+D5
      0m+gdx9FuP1bvlZ58pomAM1OWgbW2nWM6bcwZt8Dowy659EvEhpauA/3we/gGvgSwr8zjlhO
      ogLwCLJWwly+hDH7PubcBwiPH6338/i++k/R2sdgO00Xzf3IlXSkZVGNx5G120cTAeLee55q
      OkK3Z9a68PnRfF60lpb767SLNG0AyvkMJekhFgpg1cpcvzFNrHuQrtbQZy5TVgtY2YWtn5dP
      UIu/gTn3AVqoB9eer+L+hX+LFhlE6PX9yGSlQv7NtzCz2dsPgDTuaVpZJtKmWa+yXEFWK1iF
      IsLrRQsG0cNhtHAYPdiCFo2iBQK4ujrRo1H0cBh9B/TLpGUhSyVkrdY8neD7SVKJRTKGm9G+
      LjZWl8hpfrpjEXRd+8yd4OrV16hd/sGWz9OC3ehDX96cSBbqQWiN+wZ+4M9h559HSpASaVrI
      UhErn8fM5bByOcx8HiuTxcznMdfWMDMZzEwGq1TC1dqKHouht7ejt7aix6JoDe7jWeUKVi63
      WedMFquQ3/w9n8fKFxAeN8LtadYAALUis6sbDPd1US5kmJyM4wq1c3DPwN0AhMPhuv+386s5
      /vT/XcYwm+taA7dL5/jBXl58egjdpibRtpgmViqNlU5hpTOYqSRGMoVs8FoOms+HFg6jtbSg
      R6MIvx8RCqK1BBGhINz+UmvSJpBk7uYMi+kKIb8bHQupacSi0Se6PoCUkh99OM2e/jae3tNV
      17IfV6Vq8pOz07z+QZzvvXCQF44O4nHXZ6WeunK7obdn82cHaN4jwCM8qXGAbKHC7/ynE/zr
      v/812iOBupZdLzcWUrz67gSLazn++rP7eOHoIH7v7uygNoIKwD3eu3yLU1fm+Sd/81m0JzwJ
      63FIKZlbyfKX71xjYX2Db31pL889NUDQv8VpWeUBKgB3y5T8q//2Dt86vpfjh/rrVu6TJKXk
      1mqWH743yY2FFN/84h6+eLAP1xZ9BI9LJxTw1GWh852uSfsAjbeSypNIFzgyunMmowkhGOqK
      8tuvHOfWao7XT05x4qMZNO3RO7ZhWhwe7uRvfO0wrWFnj0irI8Btr703SWajxK9/e2dfe1yp
      GlveYa9aM/nJmThvnJvhpWMj/OKz+2hxaPNJBQCoGSb//I/e4jd+4RnGBtrqUmazk1Kyminw
      g7eucX0+yfe+coAXjg7irtMa0DuFagIBsysZylWTkd6Y3VVpGCEEXbEg/+CXv8hcIssf/9VF
      Xj91nb/37WM7qhn4uBx/BJBS8l9/fJG2sJ/vvnCgDrXbmSxLcjG+wp+dGCcW8vFrLz/FSE90
      13eUm3hIsTFKFYPTEws8e8TZd0rQNMEz+3r4/m9+nS/s7+X7f/Y+f/DaWVK53b12m+MDcHk6
      QU9riM5Yi91VaQpul863ju/l3//WN+mIBvid/3yCP39jnI1ixe6qPRGObgJJKfl3/+MDvny4
      n+ePDtapdrvLcjLPq+9OMDm3zndf2M/zRwfxundP19HRAUjlSvzuf3mD3/utb9Lic+ZpwO2Q
      UnJzOcOf/OQSG8Uqv/byEY6N9Ww53tBsTMuiVDEolKqkN8q0+N3NGgDJ+vI8VXeE3vYIRqXA
      tWtT9O09RFvIV7cAvH5yiumlNP/wV36uTvXe3QzT4vJ0gv/51lVCAQ+/+tJhxvpbn2hH2TAt
      qjWTmmFSrhrUtjlLt1CqspYpkkhvDnCuZYqsZQoAuHSNgNfNWrbYvAGoFrIsZiqM9HWRWJjG
      E+1ldWmRsb2jdZsO/c/+6Kf8rZePcGi4o071doaaYfHW+Zu8/sENBjoj+D31aRKZlqRcNciX
      qlRqBsVKDWlJdF1D1wQuXdv2HC2PW6M9EqCnNUhnrIW2SIDuWJCAz43P48Lt0vjw2mKzjgMI
      PB4Pgsrtfwlq1QqSzanQd360x7hQZXYlw0axyuHRLsfdj+hxeT0aP/9zY3z1mREm5tap1upz
      SxtdE3g9Llp8bvxeNwGvG7drc6fXtNs/2wyAvo3m2bNHBpo1AJK52TmS+Rohv5twRx+z09MM
      7t1XtwC8Pz7Ps0cG0Bt4tddu0+Lz8IX9vXZX47E0aQAEQ2MHGbrnkQOH6ne7QNOy+PDqAv/i
      775YtzKVncmRX3+XpxNEgz661Ll/x3NkAN46P8tzTw3s+mF+ZWuOC8BGscL1+SQvHB3a+snK
      rue4AJyZWGTfQBuhgBr4UhwWACklb1+c4/mjg6r5owAOC0AiXSCbL3PUQfPdlUdzVADevTTH
      03u71G1ElLuadBzgyeiMtvCVp1XnV/lYk84FerSdtkCG0rwc1QRSlJ+lAqA4WnMGQEqmJ8f5
      6MI4hoRKdp0PzpxmeT1rd82UXaY5O8HSQHrCjIZrZIoW7koZLIHL5cI0TSzLwjRNag2+5bay
      +zRnAIRGJZ9mISsZjFTQvAG6O1tZWU7QER19YrdHV5ynSQOgM7ZvHxVT4Pfo4A0TNaE/os76
      KPXVnAEAPL4A987WibW22lYXZfdqzk6wojSICoDiaCoAiqOpACiOpgKgOJoKgOJoKgCKo6kA
      KI7WnAGQFpPj5zl95hxVC/KpFU5/+AHTC2t210zZZZo0ACbuYDv7B6JkSxaFYpFDx44jy2o2
      qFJfzRkAoVPOJJicS+EyN9BcHq6eP410h+yumbLLqEsiFUe7G4ByuUyptDMWRJNSYpomLtfH
      c/ksy9rybtHbec6d74Ot7hvU6LK2+/9t535HjS6rXs+pd1lSyp15BPgk2/mDGYZxX2geVg5s
      vdPaUdZW5ZimiaZpWz6v0WXV6/3VsywpJZZl7Z4AbMd2P+SdWtZ2A2dHWU37WTkpAIrys5rz
      LFAdmKUE752eYP1WnOwnXTpcS/H22x+ykEhtWVZy9jrjs0vEp2c+cfv68i0+Ov0+EzdXtyzr
      0tmTpDc2iM8uPbBNSsm1Sx9x7sIVjEd8LRm1PO+f/Ijc2i0SGw++OWmWuXDyDHkkSzMTxB8x
      flItZzn14QXSiTmSBeOB7VatyPlTH1GQFtOTVzlz9hyVh6yIND81zsxykvjM9Cduz6wvc/na
      DcxSjpOnTjG3tP7Qes1OXGI2kX5oWenVJcYn4pRySc6fO8uZi5MPKcnk9MmTlHLrxJfTD2xt
      2ivCHpu0CLglK6k8nto0U8kkgZYQHV1tlCsa/aEqwutme4c/N7KaJVcVzEyNs5YuEW2N0hEL
      Utaj9PYMUCyW6RzcerG9cKydlfk5pHBz7uwZcLcQCfnwuHT6BgYBQTWbIFM5Qrvv4eVE/dpm
      eD015iaSRMJh/NEOrHKR4eEBhvo6sRD09g8wu/6okxuCsBeW1jLo2RrT2RTRUBhfrAurlGd4
      eIDB3nak0IhFQ6xt1NAf8rWpeYKUsquYUjA5fp5MwSTWFqMz5MEM99Le3kM2P4thmOgC5CM+
      fbcvTCa9giUFE5c/IlOA1vYonWEvMtxLa2cvueIs/nAbw30FTP/DPntJayzKwvwCFVeQ0/Nx
      fMEoQa+Oruu79wgA0N47SHJ5HsMw0F0a/nCUmYnrtLVHqWl+WltcpFMPfis8SDAw2Mfi/CKG
      YaIJiLVGGZ+cpyPiR5oVKvjw6Vu3TTWXl1Y/pDZKmFJgmQZ+F2TKFpoQRCJhhD9KxPvocqId
      fWysL2MaNTSXDp4QqdmrBNo6kbUik/E4s7MLzM/OEJ+eofyIhexau/rIrC5hGDV0XQdfhPXp
      SwQ7urEqeabiceZm50lmNsAsU6k9ZKlSIRjobWdpeR3TNBBS0tnWwqWZJG0BF6nEIvF4nFSh
      QrAlSDr9iM9eCPq7Yywl0hiGCZZFd0cLl26miPl11lfmN8vaKJDMVWkLP/zbwh2I4DLzFMtV
      pNAwDRNhFDCEZ/f2Ae68LWlZCE3DNE10XUdKCyF0QGIaBprLteXKg1JKEGCZmzupaVnour55
      uk3XQW5+l21nBcO79ZISKS0QGpoAKQWatnn2BTT0h33N3leGhRD3vrc7HUSJYZgIoSGQWFLi
      crk+sfP4acuSt+/I8Unv9E5ZlmUhBFgW6LqGdXupU8s0MW9/ZtIy0TTXQxfb/rgsiRASS4Ku
      PViWruuAeMSi3RIpuf03EkjLRGj63feyawOgKNuxq5tAirIVFQDF0VQAlB2pkE2xsLiCYT26
      BW8aFdaSaSyjwsL8LTaKlfu2qz6AsiO988PX8A12kcn7+dyeNoQ/ikeXuDUNXzBIMbNOrqqx
      fPUdVtx7+cqIzonxVYx8hp//ay+yni7iKy/u4nEAZVfTXT4OPn2Ut/7P23y4fJW5DY29PRF0
      t4eXX36Jd97/AJ+sUtGg/1APsEpX/zDF+XEmr17k1DvvcfzFr6smkLIzBYIu3j3xLgeOHkL4
      wgz3d/P0UCtlfyea0GgN+qi4IowOD9HTEcXlDbB4/QJaqBtMk33799HRP6KaQMruMXXlMgP7
      DxNw69t+jQqA4mj/H46XMuFwEhynAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Eggs Price Over Time (Median vs. Average)' width='192'>
      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
      fwmlvh9fXpWtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Meat (Per Unit) Price Over Time - Median vs. Average' width='192'>
      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
      s6b5/+/aPkmB24vGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Meat Price Over Time (Average Minus Median)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Milk Price Over Time (Average Minus Median)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Milk Price Over Time (Median vs. Average)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Savings From Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Seafood (Per Unit) Price Over Time - Median vs. Average' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d6ZNc13mfn3O33runp2cHZgbAACBAAVzERTJJbSWJsqTIsRQ7clKJY6dS
      qeSbK39DPuZTqpIq23LZ2SRXrHjRZq1cJK4ACZIAiXWAwez70nvf7Zx8uIMhQILAAJjpO8Sc
      p9jsRt8797739vu75z3v2YRSSqHR7FKMuA3QaOJEC0Czq9EC0OxqtAA0uxotAM2uRgtAs6vR
      AtDsarQANLsa69qHVqtFs9mM05ZNU6/XyWQycZuhuQ/YEEAymSSZTMZpyx1RLBbjNkFzH6BD
      IM2uZscKoLq6wDun36XWaHD2zGlWa624TdLch1i33yUerESW/lKTyauXKe3dz/zMFIWDBwCQ
      UhKGYcwWau4HdqwAmtU1QidPT1ESKAVKIITgWudVIUTMFmruB3auAJo15lfmGT4wwsrUOAP7
      DyNEJALDMDCMO4ve/DCk5rnYhollmtiGgXmHx9Dcf4g4xwOUF6d44+33wLDxgpD9hz/BA/sH
      uN2zfXV19Y6zQO/OzfKL0QsEUhJISagkSoFjmjimScKysE2T3myOT/T0sb+zhKFLmfueWAVQ
      r1VJpjLMT45yZa7O8QcPks/ntkUASilCpUApFKBQhFLhhyFeGNIKfAIpGVtd5t35OSqtFkd7
      enmob4AD2yCGhu9RabUI5a1vv2EIiskUSdve0vNrIuItAeZG+avv/iNduTyf/ta3OFC6vfPD
      3QngTlBKsdps8u78LOcW51mq1zna08ux3n72FzuxDGNTdRClFApFzfWYrpSZrVaYqZSZrpTx
      woBiKn1bYQVSstZqohQUkkk6UikKiRSdqRTFVJqOVIqsk6Dhe1Rdl4rb2nivtFrUfY+a69IK
      AkxDkLEdUrZN+rr3tG2TchzyiQQHOkskTGtb61jq2kNoE65nrIe920WsAlBSMjsxyhtvvEOq
      /yBffPrRTeVlt1sAH6TqupxbmOP03CzLjTpd6QymaWAbUV3CMk1s08QUAts0sQ0TNwyYrVRY
      btbxw5CBXIG+XJ69hQJd6QyldOaO6iCtwGet2aTcarHWalJuNVlpNCi7LWquS9pxyDkJ8skk
      uUSCrJOgI5na+D5pWYRKUvc8mkFAw/No+B5N36fh+9Q9l6rrMr62yvG+fp4a2kdnOnPPJd+1
      krfl+8zWKkyXy8xUyizWa3ibyOSV0hme3refkWIJyzTvyZabEasAlicvUzGTrExWMGjw0Kce
      YzOX2G4BXE/NdVms1/ClJJAhfhgSSIkXhkil8MKQIAyxTZP+XJ6ebJaOZOpjk7VaazU5OTXB
      O7MzFFMpPrd/hKGOTpxNOJ9SUUhZcV1mqxVmq2XmqlVWmw3cMKA7k2UgX6Avm6M3myNtO7c+
      HoqpcplXJsaoeS6/NbSfT/bvwbG2LncTrwAmzvGTF09SWXMp9gzw7W9/fccLYLfgBQFn5mc5
      NTNF3fN4Yu8Qx3v7ya93l1FK0fR9yq0mC/UaU+Uys9UyVc9DKUUpnWFvocBArkB3Jksxlbrr
      rJtSiqtrK/xm7AoL9RpP7B3i0YE95BP33nUnVgHcLVoA7UMqxUylzMmpCS4uLTJS6sIUgtlq
      hYbv45gmPZksewsdDOQLlNIZconEtmXQ5qoVTkxNcG5hnqM9vTw9vJ9SevMdI5VSNAOfcrPJ
      +Npq/AKozk8w1bA4NNSLaZo7ohKs+TBKKaquy8WlBRSwJ18gl0iScZy2p4uvJSlem7zK2YV5
      8okECcvCMa2NtLZ97WVEKW4/DJmtVpirVfGCgIRlMdxRjF8AzfICP//lr+ne9yC/9diDWgCa
      O6Lp+yzUqrTCYCOl7QUhfhhEn9dftmnQk8nSn8vTkUqTsm0MIeJvCfbqZaSdZmlhHsXmBKDR
      XCNl2wwXO+/672MXgJ1MYyJJZ7Pa+e8R2WoRLi8TzC8QLC8TLC4SzC8QLi6ifI/C7/8+6Sef
      iNvMHUWsIZCUIa1mC6kUpmWTTCZ2fQiklAIp8ScnaZw4iTd6GXWbfLkKfMLlFVSziVkqYfX0
      YJY6sXp7sft6Mbu6UM0my3/652Sefor87/5TxDbk1D+OxCoAt77KL3/4Y2qpEqHr8wf//Hd2
      ZEPYdqOUgiDAm5yk8eprtN45DUKQeuRhkseOIRK3zpdjmlilEkahcMv2hrBcZvm//XdEKk3p
      3/87jB08rFT5Pq0zZ/CujoOUG99L172r49n9faSffhojkbjh+9grwV51kZ899zKp0iBffOax
      HV8CKKVgi8YiKM/DvXiJxuuv4168hJFMkv70p0g99hj2QP+WnOND5/R9Vr/7Pdyz5+j6T3+C
      3du7Lee5G5RSyGqV+ksv03jpZbBMUo8+Cte1H3zQgTdL6+xZZK1O8Y/+EHtwcONBEbsA1qZG
      ee6Nc/QPHuDTj31ixwvAm5hg5c+/c9uwZDMo18XM5Ul/6kmSjzyM1dfXthbj2ou/pvz9/0fn
      H/8RqU8+2pZzfhRKKfypKWq//BWtd06TOHSI7G9/BWf/PsQWdVlXYUjj1dco/833yX7lWXLP
      fhlhWfELoDx1gR+/8h7D+w/z1BPHdrwAVBgSLC7CFtw2kUhgdnRs2Y98Jyil8C5dYvlP/4zs
      5z9P7mtfbXu9QAUBrXdOU3vuefyZGTKf/QyZz30Wq/Puszq3I1haYuU7fwFhSOd//A/xC8Br
      Vhkbn8bJFNg32L8hgNXFGaaXGxwe6OSNsxcYPnCUPT0d0bb7rA4QJ8HyMit/+meYHR0U/80f
      blu9QEmJrNUIl5fx5+bxp6ZovfMOwrLIPvssqUcfwUiltuXcH7IlDKn96jnqL70UvwACr8Xi
      0grvnD7Hs7/9xRsqweNXr1IqJDlzfpzhgw/QV8ojpWRtbY1CoRCbzfcbynWpfO+vCcbHSTz4
      ICKdRqRSiISDSGc2PhuJBCKZBCFuqJh++ICKsFolnJsnnJkhmJ0lmJ5BBQFGOo3R0405MEDy
      +HGc/fsgpoxU66234m8H8OrL/J+//A6Dn/zSDeHPysIMY2NjJI4eoZDPsLy8wkB3B4ZhYJom
      th4gsnXYNqV/+8e4Z8/hTU0i6w3k/DzSdZG1GrJehyBEui0Igij8E7cI24RAJBLY/X1YAwNk
      nn4Ke+9ezEIBkUzumBSs/eST8ZcAC5feZtwvsjJ+gS9/9dmNEiDwPfwgxLYdgsDHdhKYRiQR
      HQK1F7U+kg4po3elolLgVhjGjnH0WxFvCaAUnUMHOffSK+w5dGM3CMt2sNYf8pa182/k/YwQ
      InL4+3ASgVgFUF+Z5gc/f4lErofPHNyru0Jo2k6skm7Wyvi+Yvbyuzz/ytvI9bGiGk27iFUA
      vjQ5/OBRfvf3f489OcWpM5fiNEezC4k1BOrf/wDp/AKTs4vkOvfwwEC3DoM0bSXmWo3AMiyG
      Rg6TEOHtMwsazRYTczuAzws//ntmVYbh4RF6t6kDmEbzUcTeEHboocdxZufJZbe3a+7MUpVQ
      SgZ7dAuy5n1iDoEs9g7vIQxcXNfb1gzQ3EqN//w/f8N/+etXGJtd28YzaT5OxN4SvDx2lqte
      hiODPaTTqW3tDdp0fZ47dZUfvnyB4b4C3/zMUR4YKn1sJq3S3BvXXF0BYShZqTbjFUDgNRm7
      eI43Tl9g+IGH2zYrhJSKl85M8P0Xz1LIJPnmZ47w8MHeHTNdulIq6nmgFFIqpFK4fkCt6VFr
      eDRaPuW6S60Zfa61PMLw1j+jEJB0LBKORdI2SSXs6LNjknSsaJttkUpYpBM2pmkQNQALBCJq
      CBZi47stvUalUFLhBeEN11Zv+YRSkk7Y5NMJko5FNu2QTTnX2RPZcv0xKnWX6vq9KtdbVJse
      lZrLYrnBSqXBarVFpeGSSznxCsBrVjh3bpRASSZnVvmdb3y5rUMiQyk5cW6av3nhLLZp8s3P
      HOET+7tv+3dCiA/9ANc7hyEEivedV8poJupQKlwvoOH6NN2Aesuj3vQ2fvBy3aXW8Ki3PFwv
      oOkFNN0Azw8xDEE25ZBO2uRSDvlMgmzKIZO0yaUTt3VKpRQtP8D1wg0bXD+g5YW0vICWF1x3
      Th+lwLYMLNPAsUws08C2TBzbxDC2oMRUCs+XuP76NQYBSkE6aZPPJEgnbHJpB4HA9QPKdZeG
      69No+TRcH9uMhGtb0UTFLTe6BgRkUw65lEMhkyCfTW587syn6e5IU8gkKOZSOLYZrwCalQWe
      e+4VfCBVHODZzz0Zy4CYIJScPD/ND1++yFK5cdv9o0U6Ike/1kHPNI0NERiGABUdN5Qqeg+j
      dQmuPWWTjkUmaZNNJShkExs/Wjpp05FNRttTDumETSphYbe5P1QQSvwgxPNDXD/EDyXeumDk
      rbpCbxIhBAnbJJmwySavlUaby8mEUuIHkkbLp+UHSKnIJh2SCYuEbd5RCfUhATQry5y9OEbX
      wD6GB7pu2Hl5eozlMMXhob4PHai1NEMzP0DxNuO3t4Lt6g2qVOSst0NKFS2yESr8UAKKIJAE
      MiqGg1CCgIQdPTkTtoVjmzjWFj09NVvGhyQnDAOlIOkoXvj5T3G6hikZZcbWFF2mS6p3D2+e
      nCCR70DWynhmmq6MwdzUDAeeGrhjA2qLE/ztz07xwAN7eeKJx2NNSwkhNv2kvbuh2bsXpST4
      TZTXgKCJ8uqIVBGR7Y01CfHhMkcYdHTkWZiZwMOhK5uiujyP78HA4X1kS1kuN1r4rTpKWSB9
      Gi1BIXeXeXwlaJbnmC/f2A0iDDwqdZeOfJq5mTk6e/tI6G7ROxoVBsjVMeTieeTyZWRjGdVY
      QbXK0FoDBJg2GBbCSqDcGiJTwnrgq1j7nsHItn+Gig+FQFKG1Go1UukcgdtAGTaGCgiJKh2G
      adKs1zATKQhcQmHjGIqm65POZjHvUMxeo8LC4hLLTcFDR/ZviKC8ssTsUpm+DpulusIPFEcP
      7QP0gJidgpIhqjpHMPk64fSbyLkzYNiYAw9jFPcj0p2IVCciVYjerWQkANMGwwa/STD5GsHF
      nxFOn8LoPIB1+CtY+z+HkSm15RpibwdYuHSa7/7yJAeGhvknX//Sh8YEZxyJ0THE0tQYBw+O
      7IAxwddu1y6L5YMWKnDBrxMunCOceB01cwohPcy+45j7PoPoewjS3ZGD3yleDTV1gnD0F4TT
      b0DPMcwHvo7RdQiEgTA/onJpWFGJYlhgJ0HcWZQQe1eIXHc3nSkH4Tg3uNTizDgTk5McPHyY
      mfdO0bf/yMbyqFs9JlgphWquEFz6OXLhHMproIIm+C2U3wSvHv3ba6CCVvSD2GlEMg9OFpHM
      R/GsnUIkC+DkMEsjmHsfBzvdlhh34zmmQlRlhnDpInJlDLl0Ebl6Fbk6Ho3VNR0wEwg7CaYD
      hglWEmEmwLQg9KNrdGvRu99EBS2EaYGZRDgZjNIIzt4nsB7/Q0RhL+JuHP6D2EV44Cuow8+C
      Vye4+huC0V8SvPGd6JpC7+Z/J4PoFQaRvTJ8/9pMJ7peKxldm3GTiD/uEmDxyll++vLbWJki
      3/7WV9vWDhBNR9gknDyBd/r/IhfOYh16FrPvGNiZyMHtFNhJhJONnMRJI+x0VKHzaqhWFeXV
      UK0yqrkaOUurjPJqyOVRwpm3MDpHsPZ/DmvkC4h8f/Skup1dKgSvgVybQK5eRfnXpWZDP9oO
      IANU6IMM1538Kqo6i0iXMLoOY3TuxyiNYHSOYHQMAgJCD0IP5TfX/zaInu6hFx3btBFWCuFk
      wE5FzmSlEMbHp/6l/GZ0jRvX6oJcv9YPEKsAQq/B6yffJu0o3EQvTz50cNvbAVToI5dH8c/9
      kGD0VxjFfdjHvok1/Awikb2rY37kufwG4fQpgvFXCa48j7DTmEOfwjrwBcyeo2BH9SjVWCZc
      OBdVIBfOI8uTqMYyRn4PRud+sNMbxxSm834xLwRYCYTpIDqGMDoGMTqGEZbOUW2WWAWweOU9
      Lq/UmZ6s0ZFWfP4rX9y2NcJUcw3/wk8Izv8E5Vawj30La+SL60/G7UfJELlwjnDqJMHYr5HV
      WUSmC9wayBCj6xBG12HMniNRBTLf/9Fxr2bLiLUOkO4osnL2CgYS0nu2tVoZTL+JXL6M88yf
      YPY/1HbnEoaJ2XcMs+8Y9mN/hKrNoxrLiEw3ItOFuNU8O5ptI/Y6gO+2UKaNcwc5fp0G1WwV
      sT92GsuT/N0//CPnLo3rGSE0bSf2NGimNMCBwQqOE7sWNbuQ2L1udeoKb525wuVLo7oE0LSd
      eAWgJCuVKplkQM/ggd3WtqrZAcQqgJXJi0w1EuQzBR481J50pEZzPbEKwE5nqM5NUG+UefXE
      GR0CadpO7GlQpSTVagMnYZNI6GVSNe0l/krwxAX+9/d+wEsvv6pLAE3biV0A2VIvfR0GiYKe
      F1TTfmIXQHlhjmPPfAW7VdElgKbtxC6AzoFBps6eIFnq0yWApu3ELACPi+dHadSbrK6Ub1oC
      BM0qb7xxkukFPZ2hZuuJuSuEw57+TppOgWOHhm5aAjRqZZquJJdNI6VESkkYhvi+33ZrNfcf
      sQpAqZDRS+c5O1Un8DyeeOTIh/ZJZDp4+KEsV0av8PDxBzBNE9M0sazYuzFp7gNi9aLVyYus
      iW4KyYCHjx266T62YzM+OsXBwyM3jK3VE9pqtoJY6wBOJkdtcZKWV+f1U+/dtA5gWAkOHzlC
      NqkXxtZsPbG3BF/D9zysD8wM8VHolmDNVhF7GlQpSRAEzM3O6XYATduJvSa5OnGR59+6xNr8
      VR753O/x2BG9TpimfcReAiSzGUwUvYNDCJ3a1LSZ2EsALId8NsfRRx+nr3Nr5+XRaG5H7CWA
      ZScImmv8+qXXUTq1qWkzMTeEKSQGQ/v2k6jpKrCm/cQqgMr8Zf7yuz+hK1fg6X/2e/EXR5pd
      R6w+V+gd4V9++xv09HcwduES977ylEZzZ+yYhrA7QTeEabYKHXVodjVaAJpdzY4XQKOyyOuv
      vcrlyYW4TdHch+x4ATRrVQ4//CmUW47bFM19yI4XQCKZ4sI7JwiNu1yGVaO5BTs+C6SUQimF
      EGJjEIzOAmm2irY3hNVqtXsez1ur1bbIGs1up+0CyGY31+HNb6xx5vxl8qU+/PICvp3j+JGD
      XOsupEsAzVawY+sAVqrAgaEBErKJ3TlIwZF4uqlYs8XsWAE0y3OMTq2SLRSor8xTrntYO9Za
      zceVWDvD1dcWefPU2/jKxA8VR449zPBAFwJwUh3s6QWsFAf370GaKUzdW1qzxcQqgEAaPPnM
      F6ivzDG5UCFtv+/hViJFf38qRus0u4FYBSCCCv/jL/6WrGXy8G9/g+7ukp4fVNNWYo2qs6VB
      vvyFT5HMJJidnNazQmjaTqwlwNrcJGZHNyMPPIFBQwtA03ZiFUDo13n+Fy+yttKk2NPPJx57
      JE5zNLuQHd8V4mborhCarSL2zHp1YZLLU4tIKXUIpGk7sQvATDi8/crzvHrqXNymaHYhsQsg
      bDUwEmnKa6txm6LZhcQuACEMTNPAMGI3RbML2RGV4CDwMUwLY5Mzw+lKsGariDUN2qou8dzP
      X6BpJUhminztS8/olmBNW4k17kjmuvitJ48hDItGtaqzQJq2E3vgnSn2YPs1uvv36Ke/pu3E
      LoDq4iylkYc4/sC+G753G1WmZheRXpPTb5/S6wRrtoXY1wdIFbuonT/Fec/nqSeObXwfSvCa
      NRqVkES+i57O/MYAeaUUUurhYZp7J3YBWIk0g0NDXLwyheLYRhiUzuYwl5ax02nstSpnL17h
      +JEDN4hAo7lXYhdA6LeYmpig1Lf3hjrA4sw4c/PzOMkUtXqdvsGRjbYCwzAwTfOOzqOUwgtD
      vDAkkNG7GwS4QUAr8Kl7Hq0gIOskGOzooJTOYH3M2yaUUtR9j7lqlflald5sjv5cnozjxG3a
      jiF2AQSNKjVf4q6uomBDBN0Dw3QPDAPQ39d7z+d5d36Wn126gCkEhhAYhoFtmCQti6RtkbEd
      HNNioV7l5Ykr+KGkP5dnf7GToY4i3ZksiR2+Or1SirVWk5lKmbHVFSbWVmkFAYVkkt5sjrML
      c6w1mxRTKQ50dnGw1EVfLodj7uzr2k5iv3LDsjAFOJtcI/huOdrTx4HOLkxDYAoD0xAY4uZP
      +EBKqm6LyfIaYyvLnJqZou55dGey7Ct2Ukq/P0uddYvjbCeBDJHq/c9XV1eYLK8RyJDuTJYD
      nV18/cgAvevCFUKglKLhe8xUK1xcWuQfzr1Lw/PYUyhwuNTNYKFIxnEwDQNDCCzD2Pj8USil
      CNbrY4GUBFKiiL4LpUSub7+2XyAlUklCee8hrCEE5nopfe1cNyO8xflibQlurs7yg5+9QCLf
      xze++nnMHdoSHEpJM/CZrVQYW11hrdXcqIPc6sZvJ5ZhbMyUZ5sme/IF9hU7KabS2NdtuxWh
      lDR9n7HVZS6vLDO5tkorDJBSbTiuVBKlonNc73B+GG7sYxkGAjDXBfP+Z4GBwDJMhFj/bv3h
      Y27BQyNUinBdfNYthHorEccqgIUrp/nRi2eoLM1x/Okv8oWnHtlUXlZ3hdh6lFKo9XeAjf9H
      /+GHYeRwat3hROTskRDhWvB6vZvd7PvNCFMpBUoRrq4SLCzAZlzUMBC2/dGbM1ms3p4P2RCr
      ABZnp0gVe8gkbGQYMD0zz+DQ3tuGQloAt0cpBVJCGCJbLWSthpHNYiSTYJqRw+yQVTmVUijX
      JZidxb1wAffiJdxLlwCB3d8Hm7FTSpQffOTmcG0N5brY+4ZJHj2KMzKCc2B/vALwmxVOnHiT
      uudjGBbHPvkkfcXbT50YpwBUEBAsLkbOtUNQShEurxCuLBMurxAsLxMuLSPrdcJKBaTEyOeR
      lQoYAiOTxcznMTuLmKUSVlcXZqmE2VFAtLGiH8wv4F6+jDc6ij81hZkvkDhyhMTRI9jDQ9i9
      9578uJ5wbQ3vyhXcS6PROWfn4u8NKsMAJQxkGGLZ9qYqwnEKwBsbY/nPvgNq5wgAITA7iljd
      3ZjFjui9sxOzkMfI5zEyGYRhoKREtVqEa2XCtVXCtbVIMIuLhEtL0VOyXcIWArPQQeLoERIH
      R7CHhjBzuface52wWotbAAEv/egHLJkFTAy+/tUv6DqApq3E3NIjsZMZvHqF7r4+3RlO03Zi
      FoDFkUceoiPt4Hv3tmaARnM3xNwQZhBUV0j37efwUH+8pmh2JbF3dkkVu2gtTTM2ORe3KZpd
      SKwlQLOywPMvvEpomNi+F6cpml1KrAKwU3keeewxJJK33j6P4mFdEda0lVgFIAOPhYUFJIJn
      Pv/ZWOKxaHBN1PdlKzpo7WQcy8Qw9CPmemIVgJPK89DxI5w6fZl6ZYVibvvGBU8ulDl5foam
      61Nv+dSaHo2WT6Pl44eSIJR4frhNZ98Z5NMJ+koZhns7ODBQZLCnQCphkXRi7xQcG7Ff+erU
      GCdOvMXgvj3s2bN9Amh5AS0vIJ106O7IkE05pBM2mZRNwrZwbJOkY22q28nHESkVK9Um04tV
      Lk2t8NboHAurdUxD0N2RYWSgyHBfB4Pdebo60mSS9o7pK7SdxN4Vwm+UOXnidfzsIJ99/OiG
      AOqVFRbLLoN9HZw7e4H+Aw9QykVLJumW4K3BD0IW1xrMr9YYnytzeWaVq3NrCCDhWAx25zkw
      UGRffwe9xQzFXArLjD1xuKXEXwJMj/P26Ax9PaB4XwB2Io0KyqwtzdEzfIil2WmKmQMbA+LD
      8P4OV9qBIaC3mKa3mOahA1FX4VAq6k2PpXKDK+uCeP3sFKu1JlJBX2eWdOKjux3fCZZpbIwv
      ALAt44Y6imNFw1694LrfWoF7Xagayih8vR1CiI3jAZiGwLKM+AXQNXyQR49WsbPFG8IfJ5HE
      EAKBQoY+SomNIlkIsSuK5ziwTEEhm6SQTTKyp3Pje9cPqdRd5lZqNL2P7nZ8JwShJAzfD0D8
      MERel4jwghAB2NaN478T9vtua5kCcxOlklIKz39fKFJK/FDGL4DF8VHefneMkUPhDWOCF2fG
      WVxaIj1yiPLsFHv2H9pwfLE+plfTPlIJg1TCprfz9t3VP07sgDpAhctXRllykzz92IM7vju0
      5v4i1hKgMnuZH/zqVTwfcsVu1CYFoNFsFbEKwHNbhGFAda2F5eT05LiathN7CHQ36BBIs1XE
      XpOsLkwyOrlAqBfJ08RA7AIwHZNf//RHPP/ym3GbotkmlJKowEW5VWR9EVmeRq6MISuzqDDe
      gVCxp0Gbq2t4ZFBe/YY0qObjgVIKvDqyNo+qTCNXx5GrV1GNZZRbRXk18OrR1CbCAGGuvxsQ
      eqAkRvcRzL7jmH3HEYW9GJmuttkfuwAKfXsZ6j5PoUcvkLFTiZy8hmqsIOuLqMo04fJl1OoY
      sjyNClxEMo+R6UZ0DEWOnC4hEllwsohEDgwTYdhg2mBY0StwUfVFwoWzhPNnCV75r6j6Ehg2
      Ru+DmL3HMPL9kVjuznBU0LrlLvFOjbg2xw9/+gKpzj18/dnPbDoeu9dKsPKbqOZK9INWZlD1
      RVRtEVmdjZ5Km8GwwHIQZmLjRxVWMvredBCJHEZxGCM/gMj1Icytm5FZhR4ELZRbQ/kN8JtR
      CerVwauj/AaqVYmc1q2h/DoE7oZd2CmEk0E4WUQyD3YakcghzASqtRY9zatz0b2pziGrM6BA
      pIuIZAEjP4DReRCjsAej8wAi0wVWCnGPk+wqpcBvIquzyIWzhPPvoSozd39AIcBK3nqXuKdG
      /PGv36OyNMvxZ77I5z/98LZNi+Jffg7/jb9EVmYg9BCpIiLVicj1YmR7EdkeRK5/844qfVTg
      QehFDinDyClDF2QYias8FYUF9SWMXC9GxxBGxz5EcQijMIRId0YO61ZQXi1yWr+Baq6ivAaq
      tYZyq+A1ou1ePXJqpSKx2SlEIouwUuCkN5waO4VI5iMHd3LRNisZ2eZWUX4L5ZZRfhNalShU
      8RvRfUkWENlejGzPejjSg8gPRMc1rOhJfh91Q4lVAB9c6EKsT6x6O+5GAKq5hnyHunwAAAWm
      SURBVKxMIzLdiHRpfbq97e1TFF2bigRRmUGuXkWuTUSv8iSqsRI5bSIXhQrJAsJOIVLFyGmT
      HdG/EzlI5NYdOgNm4rrK0nXzXN7DtdzwO9xHDn47Ym8HaK3N8ZMXTjMyMsBDx4/prhCathJ7
      GtSt15kau8joxIJuB9C0ndizQGYyyzf/xR/g1Ws6C6RpO7GXACpo8NYbJ7l4dSpuUzS7kJgF
      4DE1u0bQqOAkMzoE0rSdmEMgh739JcLsUxzZN6BDIE3biT0EspJJZkbf480zF2+63S0v8dKr
      r+iV4jXbQrxTI67O8A8/fZFUcYAvPXr0piVAoCS2MAnDECnlxoB439ezSWvunVgFUFtbptlS
      zL/7Js/nCzddJM8wTRzHolKtYvSXNhbJtm+xIJpGs1libwiDa63BAoTQDWGathJ7HWBt5gp/
      /4Mf8+qbZ+M2RbMLiV0AhNEcnbEXRJpdSewCyHQN0FfMoqf50cRB7G63MjXO1akl5ufmdEOY
      pu3E3BAmSXcP8uUvpGmopG4I07SdWAWgVMDC7CxXp6bJlPbEaYpmlxJrCOTWa7x36g0Wai3G
      Ll/RIZCm7cQqgGS2k2e//mUSyqfY1aVDIE3bib0S3KpVmZ6rY+PqEkDTdmIXQCpfpCsrIVnQ
      JYCm7cQqgPL8Ff7qf/0/zHQOQ6FLAE3biVUAua5Bvva1L1HKOoRhqEsATduJVQD1lSm+//2/
      Y2J+jWTq1hMYaTTbQay9QcPAZXlpFQnYiRSdxc3VA3RvUM1WEWtDmGkl6Onru+U+jfICZ85e
      prTnAAeHettkmWa3EHsW6HY06zUOP/Ip8Kpxm6K5D9nxAkik0px/+3VCMx23KZr7kB0wIuzO
      0XUAzVaxIYBWq0Wz2Yzbnk3h+/4NY4KllLddN3ir9rn2vLjVBLJbtc9mbbpf92nHvf5YlgAf
      RCl1W0fayn3g1jdcymhF8lv9wJsVQDuvLQgCLOvWeZH77V7fFwLYaWzWuXcam3HKnca93mst
      AM2uZsdngT4OnHjpRWpNl6sTEzfZKjn95mu8+ubpttv1UYxfeJux2VWujF6+6fbVxVlOn7uE
      V1vl1Jtvcn5sJ0xc7PHiC6/gr01ydfkmy1hJjzOvnWQ1CLj47tu8ceJ1qptY7Sr26dHvB7r6
      uhm/Mo5puJx87TWsTI58No8tQvYOD6OkQiLjNnMDkSrQWJnFMATnTp+i1grJFzvpyKVwciWK
      3f2U61exMx0kzRDrHtf+2hoUPYUkV6cWadoBr11eIp/Lk87lIfDZt2+I4b39BETLsgaB2tRE
      C7oE2AIMK03WaFLxQpQSBFJgecs0jQyG8PF8CF2XIG5DNxDs39PJ1ekVgjBEICkUclweXyCf
      TrA8N8no5ctMTU0RGA71Wi1ugwFIFftplecIAx9hWCgzQX1hAjvbAUGLS5dHuXJlAtf3sYyA
      hhve9pi6DrAFXFsLTClQUoJhYABKCAwhCMMAhcAyzbhNBd6vOEopEQKkBNM0kEphGgYyDAnX
      05RSSkzTwjDirhyv318lQUQ2GqYJ6xV3AfhBAEJgGiK6Jsu8bd8yLQDNrkaHQJpdjRaAZlej
      BaD52KFkyOz0BKuV+u32pLKyTNMLqKwsMj23gPxAxL8T8lsazR0RuDV+/corpE2Txz/3ZRrl
      Mj2lDuxMFq/RIJdNMjE+RamU43vf+zu+9a//FW8+9yKde4uMTg9zsMsg1VHi7JUZLQDNx5PO
      7gEGki7nzp7h7ImXOPr400ivRbLrIH3uBIvJImcvXSLT0UU2aWMnMzz02MP87Edv8Jt3Z6hY
      eY4+9KgOgTQfP4RhUZ4fZ7Lq0J8zGRo5TP/+Y8yNj/PJTwzTtbefpakp9gyNcOjgAVKORcIO
      +dUvXuPhx49i5roZ7O8jrFd0GlRzf9CqLDG20OTIyCB30i9OC0Czq/n/ohY0++RtsFYAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Seafood Price Over Time (Average Minus Median)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Offered Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='When Are Sales Offered?' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
